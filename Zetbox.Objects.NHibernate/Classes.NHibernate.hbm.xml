<?xml version="1.0"?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" 
                   default-cascade="save-update">
    <class name="Zetbox.App.Calendar.CalendarBookNHibernateImpl+CalendarBookProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Calendar.CalendarBookNHibernateImpl+CalendarBookProxy, Zetbox.Objects.NHibernateImpl"
           schema="`calendar`"
           table="`CalendarBooks`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`calendar`</param>
                <param name="sequence">`CalendarBooks_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=Calendar_shared_r_GroupReaders_RelationEntry -->
        <!-- relEnd=Calendar otherEnd=GroupReaders -->
        <set name="GroupReaders" table="`Calendar_shared_r_GroupReaders`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_Calendar`" />
            <one-to-many class="Zetbox.App.Calendar.Calendar_shared_r_GroupReaders_RelationEntryNHibernateImpl+Calendar_shared_r_GroupReaders_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=Calendar_shared_w_GroupWriters_RelationEntry -->
        <!-- relEnd=Calendar otherEnd=GroupWriters -->
        <set name="GroupWriters" table="`Calendar_shared_w_GroupWriters`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_Calendar`" />
            <one-to-many class="Zetbox.App.Calendar.Calendar_shared_w_GroupWriters_RelationEntryNHibernateImpl+Calendar_shared_w_GroupWriters_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>

        <!-- ValueTypeProperty isValue -->
        <property name="IsDeactivated" 
                  column="`IsDeactivated`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Owner" column="`fk_Owner`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=Calendar_shared_r_Readers_RelationEntry -->
        <!-- relEnd=Calendar otherEnd=Readers -->
        <set name="Readers" table="`Calendar_shared_r_Readers`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_Calendar`" />
            <one-to-many class="Zetbox.App.Calendar.Calendar_shared_r_Readers_RelationEntryNHibernateImpl+Calendar_shared_r_Readers_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=Calendar_shared_w_Writers_RelationEntry -->
        <!-- relEnd=Calendar otherEnd=Writers -->
        <set name="Writers" table="`Calendar_shared_w_Writers`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_Calendar`" />
            <one-to-many class="Zetbox.App.Calendar.Calendar_shared_w_Writers_RelationEntryNHibernateImpl+Calendar_shared_w_Writers_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>


        <!-- map rights -->
        <set name="SecurityRightsCollectionImpl"
             schema="`calendar`"
             table="`CalendarBooks_Rights`"
             lazy="true"
             fetch="select" 
             batch-size="100" >
            <key column="`ID`" />
            <composite-element class="Zetbox.App.Calendar.CalendarBook_RightsNHibernateImpl, Zetbox.Objects.NHibernateImpl">
                <property name="Identity" column="`Identity`" />
                <property name="Right" column="`Right`" />
            </composite-element>
        </set>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Calendar.EventNHibernateImpl+EventProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Calendar.EventNHibernateImpl+EventProxy, Zetbox.Objects.NHibernateImpl"
           discriminator-value="calendar.Events"
           schema="`calendar`"
           table="`Events`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`calendar`</param>
                <param name="sequence">`Events_ID_seq`</param>
            </generator>
        </id>
        <discriminator column="`__Discriminator`"
                       type="String" />


        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Body" 
                  column="`Body`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Calendar" column="`fk_Calendar`" class="Zetbox.App.Calendar.CalendarBookNHibernateImpl+CalendarBookProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="EndDate" type="Timestamp"
                  column="`EndDate`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsAllDay" 
                  column="`IsAllDay`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsViewReadOnly" 
                  column="`IsViewReadOnly`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Location" 
                  column="`Location`" 
                  optimistic-lock="false"/>
        <!-- CompoundObjectProperty isValue -->
        <component name="Recurrence" class="Zetbox.App.Base.RecurrenceRuleNHibernateImpl,Zetbox.Objects.NHibernateImpl">
        <!-- ValueTypeProperty isValue -->
        <property name="ByDay" 
                  column="`Recurrence_ByDay`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ByHour" 
                  column="`Recurrence_ByHour`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ByMinute" 
                  column="`Recurrence_ByMinute`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ByMonth" 
                  column="`Recurrence_ByMonth`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ByMonthDay" 
                  column="`Recurrence_ByMonthDay`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="BySecond" 
                  column="`Recurrence_BySecond`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="BySetPos" 
                  column="`Recurrence_BySetPos`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ByWeekNumber" 
                  column="`Recurrence_ByWeekNumber`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ByYearDay" 
                  column="`Recurrence_ByYearDay`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Count" 
                  column="`Recurrence_Count`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Frequency" 
                  column="`Recurrence_Frequency`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Interval" 
                  column="`Recurrence_Interval`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Until" type="Timestamp"
                  column="`Recurrence_Until`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="WeekStart" 
                  column="`Recurrence_WeekStart`" 
                  optimistic-lock="false"/>
        </component>
        <!-- CompoundObjectProperty isValue -->
        <component name="Source" class="Zetbox.App.Base.AnyReferenceNHibernateImpl,Zetbox.Objects.NHibernateImpl">
        <!-- ValueTypeProperty isValue -->
        <property name="ObjClass" 
                  column="`Source_ObjClass`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ObjGuid" 
                  column="`Source_ObjGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ObjID" 
                  column="`Source_ObjID`" 
                  optimistic-lock="false"/>
        </component>
        <!-- ValueTypeProperty isValue -->
        <property name="StartDate" type="Timestamp"
                  column="`StartDate`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Summary" 
                  column="`Summary`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="SyncHash" 
                  column="`SyncHash`" 
                  optimistic-lock="false"/>

        <!-- map rights -->
        <set name="SecurityRightsCollectionImpl"
             schema="`calendar`"
             table="`Events_Rights`"
             lazy="true"
             fetch="select" 
             batch-size="100" >
            <key column="`ID`" />
            <composite-element class="Zetbox.App.Calendar.Event_RightsNHibernateImpl, Zetbox.Objects.NHibernateImpl">
                <property name="Identity" column="`Identity`" />
                <property name="Right" column="`Right`" />
            </composite-element>
        </set>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Calendar.SyncProviderNHibernateImpl+SyncProviderProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Calendar.SyncProviderNHibernateImpl+SyncProviderProxy, Zetbox.Objects.NHibernateImpl"
           schema="`calendar`"
           table="`SyncProviders`"
           abstract="true"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`calendar`</param>
                <param name="sequence">`SyncProviders_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="NextSync" type="Timestamp"
                  column="`NextSync`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->
        <joined-subclass
                name="Zetbox.App.Calendar.WorkScheduleSyncProviderNHibernateImpl+WorkScheduleSyncProviderProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Calendar.WorkScheduleSyncProviderNHibernateImpl+WorkScheduleSyncProviderProxy, Zetbox.Objects.NHibernateImpl"
                schema="`calendar`"
                table="`WorkScheduleSyncProvider`"
                dynamic-update="true">
            
            <!-- base class reference -->
            <key column="`ID`" />

            <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="Calendar" column="`fk_Calendar`" class="Zetbox.App.Calendar.CalendarBookNHibernateImpl+CalendarBookProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="WorkSchedule" column="`fk_WorkSchedule`" class="Zetbox.App.Calendar.WorkScheduleNHibernateImpl+WorkScheduleProxy, Zetbox.Objects.NHibernateImpl" />


            <!-- define the subclasses -->

        </joined-subclass>

    </class>
    <class name="Zetbox.App.Calendar.WorkScheduleNHibernateImpl+WorkScheduleProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Calendar.WorkScheduleNHibernateImpl+WorkScheduleProxy, Zetbox.Objects.NHibernateImpl"
           schema="`calendar`"
           table="`WorkSchedules`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`calendar`</param>
                <param name="sequence">`WorkSchedules_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="BaseWorkSchedule" column="`fk_BaseWorkSchedule`" class="Zetbox.App.Calendar.WorkScheduleNHibernateImpl+WorkScheduleProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <set name="ChildWorkSchedule" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_BaseWorkSchedule`" />
            <one-to-many class="Zetbox.App.Calendar.WorkScheduleNHibernateImpl+WorkScheduleProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Module" column="`fk_Module`" class="Zetbox.App.Base.ModuleNHibernateImpl+ModuleProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <set name="WorkScheduleRules" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_WorkSchedule`" />
            <one-to-many class="Zetbox.App.Calendar.WorkScheduleRuleNHibernateImpl+WorkScheduleRuleProxy, Zetbox.Objects.NHibernateImpl" />
        </set>


        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Calendar.WorkScheduleRuleNHibernateImpl+WorkScheduleRuleProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Calendar.WorkScheduleRuleNHibernateImpl+WorkScheduleRuleProxy, Zetbox.Objects.NHibernateImpl"
           discriminator-value="calendar.WorkScheduleRules"
           schema="`calendar`"
           table="`WorkScheduleRules`"
           abstract="true"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`calendar`</param>
                <param name="sequence">`WorkScheduleRules_ID_seq`</param>
            </generator>
        </id>
        <discriminator column="`__Discriminator`"
                       type="String" />


        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsWorkingDay" 
                  column="`IsWorkingDay`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Module" column="`fk_Module`" class="Zetbox.App.Base.ModuleNHibernateImpl+ModuleProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ValidFrom" type="Timestamp"
                  column="`ValidFrom`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ValidUntil" type="Timestamp"
                  column="`ValidUntil`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="WorkingHours" 
                  column="`WorkingHours`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="WorkSchedule" column="`fk_WorkSchedule`" class="Zetbox.App.Calendar.WorkScheduleNHibernateImpl+WorkScheduleProxy, Zetbox.Objects.NHibernateImpl" />


        <!-- define the subclasses -->
        <subclass
                name="Zetbox.App.Calendar.CommonWorkScheduleRuleNHibernateImpl+CommonWorkScheduleRuleProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Calendar.CommonWorkScheduleRuleNHibernateImpl+CommonWorkScheduleRuleProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="calendar.CommonWorkScheduleRules"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Calendar.DayOfWeekWorkScheduleRuleNHibernateImpl+DayOfWeekWorkScheduleRuleProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Calendar.DayOfWeekWorkScheduleRuleNHibernateImpl+DayOfWeekWorkScheduleRuleProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="calendar.DayOfWeekWorkScheduleRules"
                dynamic-update="true">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="DayOfWeek" 
                  column="`DayOfWeekWorkScheduleRules_DayOfWeek`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Calendar.YearlyWorkScheduleRuleNHibernateImpl+YearlyWorkScheduleRuleProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Calendar.YearlyWorkScheduleRuleNHibernateImpl+YearlyWorkScheduleRuleProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="calendar.YearlyWorkScheduleRules"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->
        <subclass
                name="Zetbox.App.Calendar.EasterWorkScheduleRuleNHibernateImpl+EasterWorkScheduleRuleProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Calendar.EasterWorkScheduleRuleNHibernateImpl+EasterWorkScheduleRuleProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="calendar.EasterWorkScheduleRules"
                dynamic-update="true">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Offset" 
                  column="`EasterWorkScheduleRules_Offset`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Calendar.FixedYearlyWorkScheduleRuleNHibernateImpl+FixedYearlyWorkScheduleRuleProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Calendar.FixedYearlyWorkScheduleRuleNHibernateImpl+FixedYearlyWorkScheduleRuleProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="calendar.FixedYearlyWorkScheduleRules"
                dynamic-update="true">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Day" 
                  column="`FixedYearlyWorkScheduleRules_Day`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Month" 
                  column="`FixedYearlyWorkScheduleRules_Month`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>

        </subclass>

    </class>
    <class name="at.dasz.DocumentManagement.ExcerptNHibernateImpl+ExcerptProxy, Zetbox.Objects.NHibernateImpl"
           proxy="at.dasz.DocumentManagement.ExcerptNHibernateImpl+ExcerptProxy, Zetbox.Objects.NHibernateImpl"
           schema="`doc`"
           table="`Excerpts`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`doc`</param>
                <param name="sequence">`Excerpts_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="File" column="`fk_File`" class="at.dasz.DocumentManagement.FileNHibernateImpl+FileProxy, Zetbox.Objects.NHibernateImpl" unique="true" />

        <!-- ValueTypeProperty isValue -->
        <property name="Text" 
                  column="`Text`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="at.dasz.DocumentManagement.FileNHibernateImpl+FileProxy, Zetbox.Objects.NHibernateImpl"
           proxy="at.dasz.DocumentManagement.FileNHibernateImpl+FileProxy, Zetbox.Objects.NHibernateImpl"
           schema="`doc`"
           table="`Files`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`doc`</param>
                <param name="sequence">`Files_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- CompoundObjectProperty isValue -->
        <component name="AttachedTo" class="Zetbox.App.Base.AnyReferenceNHibernateImpl,Zetbox.Objects.NHibernateImpl">
        <!-- ValueTypeProperty isValue -->
        <property name="ObjClass" 
                  column="`AttachedTo_ObjClass`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ObjGuid" 
                  column="`AttachedTo_ObjGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ObjID" 
                  column="`AttachedTo_ObjID`" 
                  optimistic-lock="false"/>
        </component>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Blob" column="`fk_Blob`" class="Zetbox.App.Base.BlobNHibernateImpl+BlobProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <one-to-one name="Excerpt" class="at.dasz.DocumentManagement.ExcerptNHibernateImpl+ExcerptProxy, Zetbox.Objects.NHibernateImpl" constrained="false" property-ref="File" />
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsFileReadonly" 
                  column="`IsFileReadonly`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="KeepRevisions" 
                  column="`KeepRevisions`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=Document_has_Revisions_RelationEntry -->
        <!-- relEnd=Document otherEnd=Revisions -->
        <set name="Revisions" table="`Document_has_Revisions`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_Document`" />
            <one-to-many class="at.dasz.DocumentManagement.Document_has_Revisions_RelationEntryNHibernateImpl+Document_has_Revisions_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>

        <!-- ValueTypeProperty isValue -->
        <property name="Tags" 
                  column="`Tags`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->
        <joined-subclass
                name="at.dasz.DocumentManagement.DocumentNHibernateImpl+DocumentProxy, Zetbox.Objects.NHibernateImpl"
                proxy="at.dasz.DocumentManagement.DocumentNHibernateImpl+DocumentProxy, Zetbox.Objects.NHibernateImpl"
                schema="`doc`"
                table="`Documents`"
                dynamic-update="true">
            
            <!-- base class reference -->
            <key column="`ID`" />

            <!-- define the properties -->

            <!-- define the subclasses -->

        </joined-subclass>
        <joined-subclass
                name="at.dasz.DocumentManagement.DynamicFileNHibernateImpl+DynamicFileProxy, Zetbox.Objects.NHibernateImpl"
                proxy="at.dasz.DocumentManagement.DynamicFileNHibernateImpl+DynamicFileProxy, Zetbox.Objects.NHibernateImpl"
                schema="`doc`"
                table="`DynamicFiles`"
                dynamic-update="true">
            
            <!-- base class reference -->
            <key column="`ID`" />

            <!-- define the properties -->

            <!-- define the subclasses -->

        </joined-subclass>
        <joined-subclass
                name="at.dasz.DocumentManagement.ImportedFileNHibernateImpl+ImportedFileProxy, Zetbox.Objects.NHibernateImpl"
                proxy="at.dasz.DocumentManagement.ImportedFileNHibernateImpl+ImportedFileProxy, Zetbox.Objects.NHibernateImpl"
                schema="`doc`"
                table="`ImportedFiles`"
                dynamic-update="true">
            
            <!-- base class reference -->
            <key column="`ID`" />

            <!-- define the properties -->

            <!-- define the subclasses -->

        </joined-subclass>
        <joined-subclass
                name="at.dasz.DocumentManagement.StaticFileNHibernateImpl+StaticFileProxy, Zetbox.Objects.NHibernateImpl"
                proxy="at.dasz.DocumentManagement.StaticFileNHibernateImpl+StaticFileProxy, Zetbox.Objects.NHibernateImpl"
                schema="`doc`"
                table="`StaticFiles`"
                dynamic-update="true">
            
            <!-- base class reference -->
            <key column="`ID`" />

            <!-- define the properties -->

            <!-- define the subclasses -->

        </joined-subclass>

    </class>
    <class name="at.dasz.DocumentManagement.FileImportConfigurationNHibernateImpl+FileImportConfigurationProxy, Zetbox.Objects.NHibernateImpl"
           proxy="at.dasz.DocumentManagement.FileImportConfigurationNHibernateImpl+FileImportConfigurationProxy, Zetbox.Objects.NHibernateImpl"
           schema="`doc`"
           table="`FileImportConfigurations`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`doc`</param>
                <param name="sequence">`FileImportConfigurations_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Identity" column="`fk_Identity`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="MachineName" 
                  column="`MachineName`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="PickupDirectory" 
                  column="`PickupDirectory`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.GUI.ApplicationNHibernateImpl+ApplicationProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.GUI.ApplicationNHibernateImpl+ApplicationProxy, Zetbox.Objects.NHibernateImpl"
           schema="`gui`"
           table="`Applications`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`gui`</param>
                <param name="sequence">`Applications_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Description" 
                  column="`Description`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Icon" column="`fk_Icon`" class="Zetbox.App.GUI.IconNHibernateImpl+IconProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="Module" column="`fk_Module`" class="Zetbox.App.Base.ModuleNHibernateImpl+ModuleProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="RootScreen" column="`fk_RootScreen`" class="Zetbox.App.GUI.NavigationScreenNHibernateImpl+NavigationScreenProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="WorkspaceViewModel" column="`fk_WorkspaceViewModel`" class="Zetbox.App.GUI.ViewModelDescriptorNHibernateImpl+ViewModelDescriptorProxy, Zetbox.Objects.NHibernateImpl" />


        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.GUI.ControlKindNHibernateImpl+ControlKindProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.GUI.ControlKindNHibernateImpl+ControlKindProxy, Zetbox.Objects.NHibernateImpl"
           schema="`gui`"
           table="`ControlKinds`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`gui`</param>
                <param name="sequence">`ControlKinds_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <set name="ChildControlKinds" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_Parent`" />
            <one-to-many class="Zetbox.App.GUI.ControlKindNHibernateImpl+ControlKindProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Module" column="`fk_Module`" class="Zetbox.App.Base.ModuleNHibernateImpl+ModuleProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Parent" column="`fk_Parent`" class="Zetbox.App.GUI.ControlKindNHibernateImpl+ControlKindProxy, Zetbox.Objects.NHibernateImpl" />


        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.GUI.FilterConfigurationNHibernateImpl+FilterConfigurationProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.GUI.FilterConfigurationNHibernateImpl+FilterConfigurationProxy, Zetbox.Objects.NHibernateImpl"
           discriminator-value="gui.FilterConfigurations"
           schema="`gui`"
           table="`FilterConfigurations`"
           abstract="true"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`gui`</param>
                <param name="sequence">`FilterConfigurations_ID_seq`</param>
            </generator>
        </id>
        <discriminator column="`__Discriminator`"
                       type="String" />


        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Label" 
                  column="`Label`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Module" column="`fk_Module`" class="Zetbox.App.Base.ModuleNHibernateImpl+ModuleProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="RefreshOnFilterChanged" 
                  column="`RefreshOnFilterChanged`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="RequestedKind" column="`fk_RequestedKind`" class="Zetbox.App.GUI.ControlKindNHibernateImpl+ControlKindProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Required" 
                  column="`Required`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="ViewModelDescriptor" column="`fk_ViewModelDescriptor`" class="Zetbox.App.GUI.ViewModelDescriptorNHibernateImpl+ViewModelDescriptorProxy, Zetbox.Objects.NHibernateImpl" />


        <!-- define the subclasses -->
        <subclass
                name="Zetbox.App.GUI.ObjectClassFilterConfigurationNHibernateImpl+ObjectClassFilterConfigurationProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.GUI.ObjectClassFilterConfigurationNHibernateImpl+ObjectClassFilterConfigurationProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="gui.ObjectClassFilterConfigurations"
                dynamic-update="true">
            

            <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ObjectClass" column="`ObjectClassFilterConfigurations_fk_ObjectClass`" class="Zetbox.App.Base.ObjectClassNHibernateImpl+ObjectClassProxy, Zetbox.Objects.NHibernateImpl" />


            <!-- define the subclasses -->
        <subclass
                name="Zetbox.App.GUI.OptionalPredicateFilterConfigurationNHibernateImpl+OptionalPredicateFilterConfigurationProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.GUI.OptionalPredicateFilterConfigurationNHibernateImpl+OptionalPredicateFilterConfigurationProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="gui.OptionalPredicateFilterConfigurations"
                dynamic-update="true">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Predicate" 
                  column="`OptionalPredicateFilterConfigurations_Predicate`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>

        </subclass>
        <subclass
                name="Zetbox.App.GUI.PropertyFilterConfigurationNHibernateImpl+PropertyFilterConfigurationProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.GUI.PropertyFilterConfigurationNHibernateImpl+PropertyFilterConfigurationProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="gui.PropertyFilterConfigurations"
                dynamic-update="true">
            

            <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="Property" column="`PropertyFilterConfigurations_fk_Property`" class="Zetbox.App.Base.PropertyNHibernateImpl+PropertyProxy, Zetbox.Objects.NHibernateImpl" unique="true" />


            <!-- define the subclasses -->
        <subclass
                name="Zetbox.App.GUI.DateRangeFilterConfigurationNHibernateImpl+DateRangeFilterConfigurationProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.GUI.DateRangeFilterConfigurationNHibernateImpl+DateRangeFilterConfigurationProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="gui.DateRangeFilterConfigurations"
                dynamic-update="true">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="IsCurrentMonthDefault" 
                  column="`DateRangeFilterConfigurations_IsCurrentMonthDefault`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsCurrentQuaterDefault" 
                  column="`DateRangeFilterConfigurations_IsCurrentQuaterDefault`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsCurrentYearDefault" 
                  column="`DateRangeFilterConfigurations_IsCurrentYearDefault`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.GUI.MonthFilterConfigurationNHibernateImpl+MonthFilterConfigurationProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.GUI.MonthFilterConfigurationNHibernateImpl+MonthFilterConfigurationProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="gui.MonthFilterConfigurations"
                dynamic-update="true">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="IsCurrentMonthDefault" 
                  column="`MonthFilterConfigurations_IsCurrentMonthDefault`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.GUI.RangeFilterConfigurationNHibernateImpl+RangeFilterConfigurationProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.GUI.RangeFilterConfigurationNHibernateImpl+RangeFilterConfigurationProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="gui.RangeFilterConfigurations"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.GUI.SinglePropertyFilterConfigurationNHibernateImpl+SinglePropertyFilterConfigurationProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.GUI.SinglePropertyFilterConfigurationNHibernateImpl+SinglePropertyFilterConfigurationProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="gui.SinglePropertyFilterConfigurations"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.GUI.YearFilterConfigurationNHibernateImpl+YearFilterConfigurationProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.GUI.YearFilterConfigurationNHibernateImpl+YearFilterConfigurationProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="gui.YearFilterConfigurations"
                dynamic-update="true">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="IsCurrentYearDefault" 
                  column="`YearFilterConfigurations_IsCurrentYearDefault`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>

        </subclass>

    </class>
    <class name="Zetbox.App.GUI.IconNHibernateImpl+IconProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.GUI.IconNHibernateImpl+IconProxy, Zetbox.Objects.NHibernateImpl"
           schema="`gui`"
           table="`Icons`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`gui`</param>
                <param name="sequence">`Icons_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="Blob" column="`fk_Blob`" class="Zetbox.App.Base.BlobNHibernateImpl+BlobProxy, Zetbox.Objects.NHibernateImpl" unique="true" />

        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IconFile" 
                  column="`IconFile`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Module" column="`fk_Module`" class="Zetbox.App.Base.ModuleNHibernateImpl+ModuleProxy, Zetbox.Objects.NHibernateImpl" />


        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.GUI.NavigationEntryNHibernateImpl+NavigationEntryProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.GUI.NavigationEntryNHibernateImpl+NavigationEntryProxy, Zetbox.Objects.NHibernateImpl"
           schema="`gui`"
           table="`NavigationEntries`"
           abstract="true"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`gui`</param>
                <param name="sequence">`NavigationEntries_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <set name="Children" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_Parent`" />
            <one-to-many class="Zetbox.App.GUI.NavigationEntryNHibernateImpl+NavigationEntryProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

        <!-- ValueTypeProperty isValue -->
        <property name="Color" 
                  column="`Color`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=NavigationScreen_accessed_by_Groups_RelationEntry -->
        <!-- relEnd=NavigationScreen otherEnd=Groups -->
        <set name="Groups" table="`NavigationScreen_accessed_by_Groups`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_NavigationScreen`" />
            <one-to-many class="Zetbox.App.GUI.NavigationScreen_accessed_by_Groups_RelationEntryNHibernateImpl+NavigationScreen_accessed_by_Groups_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <many-to-one name="Module" column="`fk_Module`" class="Zetbox.App.Base.ModuleNHibernateImpl+ModuleProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="Parent" column="`fk_Parent`" class="Zetbox.App.GUI.NavigationEntryNHibernateImpl+NavigationEntryProxy, Zetbox.Objects.NHibernateImpl" />
        <property name="Children_pos" column="`fk_Parent_pos`" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="RequestedKind" column="`fk_RequestedKind`" class="Zetbox.App.GUI.ControlKindNHibernateImpl+ControlKindProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Title" 
                  column="`Title`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="ViewModelDescriptor" column="`fk_ViewModelDescriptor`" class="Zetbox.App.GUI.ViewModelDescriptorNHibernateImpl+ViewModelDescriptorProxy, Zetbox.Objects.NHibernateImpl" />


        <!-- define the subclasses -->
        <joined-subclass
                name="Zetbox.App.GUI.NavigationActionNHibernateImpl+NavigationActionProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.GUI.NavigationActionNHibernateImpl+NavigationActionProxy, Zetbox.Objects.NHibernateImpl"
                schema="`gui`"
                table="`NavigationActions`"
                dynamic-update="true">
            
            <!-- base class reference -->
            <key column="`ID`" />

            <!-- define the properties -->

            <!-- define the subclasses -->

        </joined-subclass>
        <joined-subclass
                name="Zetbox.App.GUI.NavigationScreenNHibernateImpl+NavigationScreenProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.GUI.NavigationScreenNHibernateImpl+NavigationScreenProxy, Zetbox.Objects.NHibernateImpl"
                schema="`gui`"
                table="`NavigationScreens`"
                dynamic-update="true">
            
            <!-- base class reference -->
            <key column="`ID`" />

            <!-- define the properties -->

            <!-- define the subclasses -->
        <joined-subclass
                name="Zetbox.App.GUI.NavigationSearchScreenNHibernateImpl+NavigationSearchScreenProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.GUI.NavigationSearchScreenNHibernateImpl+NavigationSearchScreenProxy, Zetbox.Objects.NHibernateImpl"
                schema="`gui`"
                table="`NavigationSearchScreens`"
                dynamic-update="true">
            
            <!-- base class reference -->
            <key column="`ID`" />

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="AllowAddNew" 
                  column="`AllowAddNew`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="AllowDelete" 
                  column="`AllowDelete`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="AllowExport" 
                  column="`AllowExport`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="AllowOpen" 
                  column="`AllowOpen`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="AllowSelectColumns" 
                  column="`AllowSelectColumns`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="AllowUserFilter" 
                  column="`AllowUserFilter`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="EnableAutoFilter" 
                  column="`EnableAutoFilter`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="InitialSort" 
                  column="`InitialSort`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="InitialSortDirection" 
                  column="`InitialSortDirection`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsEditable" 
                  column="`IsEditable`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsMultiselect" 
                  column="`IsMultiselect`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="RequestedEditorKind" column="`fk_RequestedEditorKind`" class="Zetbox.App.GUI.ControlKindNHibernateImpl+ControlKindProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="RequestedWorkspaceKind" column="`fk_RequestedWorkspaceKind`" class="Zetbox.App.GUI.ControlKindNHibernateImpl+ControlKindProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="RespectRequiredFilter" 
                  column="`RespectRequiredFilter`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ShowCommands" 
                  column="`ShowCommands`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ShowFilter" 
                  column="`ShowFilter`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ShowMasterDetail" 
                  column="`ShowMasterDetail`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Type" column="`fk_Type`" class="Zetbox.App.Base.ObjectClassNHibernateImpl+ObjectClassProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ViewMethod" 
                  column="`ViewMethod`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </joined-subclass>

        </joined-subclass>

    </class>
    <class name="Zetbox.App.GUI.SavedListConfigurationNHibernateImpl+SavedListConfigurationProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.GUI.SavedListConfigurationNHibernateImpl+SavedListConfigurationProxy, Zetbox.Objects.NHibernateImpl"
           schema="`gui`"
           table="`SavedListConfigurations`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`gui`</param>
                <param name="sequence">`SavedListConfigurations_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Configuration" 
                  column="`Configuration`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Owner" column="`fk_Owner`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="Type" column="`fk_Type`" class="Zetbox.App.Base.ObjectClassNHibernateImpl+ObjectClassProxy, Zetbox.Objects.NHibernateImpl" />


        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.GUI.TagCacheNHibernateImpl+TagCacheProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.GUI.TagCacheNHibernateImpl+TagCacheProxy, Zetbox.Objects.NHibernateImpl"
           schema="`gui`"
           table="`TagCaches`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`gui`</param>
                <param name="sequence">`TagCaches_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.GUI.ViewDescriptorNHibernateImpl+ViewDescriptorProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.GUI.ViewDescriptorNHibernateImpl+ViewDescriptorProxy, Zetbox.Objects.NHibernateImpl"
           schema="`gui`"
           table="`ViewDescriptors`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`gui`</param>
                <param name="sequence">`ViewDescriptors_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ControlKind" column="`fk_ControlKind`" class="Zetbox.App.GUI.ControlKindNHibernateImpl+ControlKindProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ControlTypeRef" 
                  column="`ControlTypeRef`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Deleted" 
                  column="`Deleted`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Module" column="`fk_Module`" class="Zetbox.App.Base.ModuleNHibernateImpl+ModuleProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Toolkit" 
                  column="`Toolkit`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.GUI.ViewModelDescriptorNHibernateImpl+ViewModelDescriptorProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.GUI.ViewModelDescriptorNHibernateImpl+ViewModelDescriptorProxy, Zetbox.Objects.NHibernateImpl"
           schema="`gui`"
           table="`ViewModelDescriptors`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`gui`</param>
                <param name="sequence">`ViewModelDescriptors_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="DefaultDisplayKind" column="`fk_DefaultDisplayKind`" class="Zetbox.App.GUI.ControlKindNHibernateImpl+ControlKindProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="DefaultEditorKind" column="`fk_DefaultKind`" class="Zetbox.App.GUI.ControlKindNHibernateImpl+ControlKindProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="DefaultGridCellDisplayKind" column="`fk_DefaultGridDisplayKind`" class="Zetbox.App.GUI.ControlKindNHibernateImpl+ControlKindProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="DefaultGridCellEditorKind" column="`fk_DefaultGridCellEditorKind`" class="Zetbox.App.GUI.ControlKindNHibernateImpl+ControlKindProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="DefaultGridCellPreEditorKind" column="`fk_DefaultGridCellKind`" class="Zetbox.App.GUI.ControlKindNHibernateImpl+ControlKindProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Deleted" 
                  column="`Deleted`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Description" 
                  column="`Description`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Module" column="`fk_Module`" class="Zetbox.App.Base.ModuleNHibernateImpl+ModuleProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=Presentable_displayedBy_SecondaryControlKinds_RelationEntry -->
        <!-- relEnd=Presentable otherEnd=SecondaryControlKinds -->
        <set name="SecondaryControlKinds" table="`Presentable_displayedBy_SecondaryControlKinds`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_Presentable`" />
            <one-to-many class="Zetbox.App.GUI.Presentable_displayedBy_SecondaryControlKinds_RelationEntryNHibernateImpl+Presentable_displayedBy_SecondaryControlKinds_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>

        <!-- ValueTypeProperty isValue -->
        <property name="ViewModelTypeRef" 
                  column="`ViewModelTypeRef`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.LicenseManagement.LicenseNHibernateImpl+LicenseProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.LicenseManagement.LicenseNHibernateImpl+LicenseProxy, Zetbox.Objects.NHibernateImpl"
           schema="`lm`"
           table="`Licenses`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`lm`</param>
                <param name="sequence">`Licenses_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Description" 
                  column="`Description`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="LicenseData" 
                  column="`LicenseData`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Licensee" 
                  column="`Licensee`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="LicenseSubject" 
                  column="`LicenseSubject`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Licensor" 
                  column="`Licensor`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Signature" 
                  column="`Signature`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ValidFrom" type="Timestamp"
                  column="`ValidFrom`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ValidThru" type="Timestamp"
                  column="`ValidThru`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.LicenseManagement.PrivateKeyNHibernateImpl+PrivateKeyProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.LicenseManagement.PrivateKeyNHibernateImpl+PrivateKeyProxy, Zetbox.Objects.NHibernateImpl"
           schema="`lm`"
           table="`PrivateKeys`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`lm`</param>
                <param name="sequence">`PrivateKeys_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Certificate" 
                  column="`Certificate`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Description" 
                  column="`Description`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsDeactivated" 
                  column="`IsDeactivated`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Password" 
                  column="`Password`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Tags" 
                  column="`Tags`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Projekte.AuftragNHibernateImpl+AuftragProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Projekte.AuftragNHibernateImpl+AuftragProxy, Zetbox.Objects.NHibernateImpl"
           schema="`projekte`"
           table="`Auftraege`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`projekte`</param>
                <param name="sequence">`Auftraege_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Auftragsname" 
                  column="`Auftragsname`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Auftragswert" 
                  column="`Auftragswert`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Kunde" column="`fk_Kunde`" class="Zetbox.App.Projekte.KundeNHibernateImpl+KundeProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="Mitarbeiter" column="`fk_Mitarbeiter`" class="Zetbox.App.Projekte.MitarbeiterNHibernateImpl+MitarbeiterProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="Projekt" column="`fk_Projekt`" class="Zetbox.App.Projekte.ProjektNHibernateImpl+ProjektProxy, Zetbox.Objects.NHibernateImpl" />


        <!-- map rights -->
        <set name="SecurityRightsCollectionImpl"
             schema="`projekte`"
             table="`Auftraege_Rights`"
             lazy="true"
             fetch="select" 
             batch-size="100" >
            <key column="`ID`" />
            <composite-element class="Zetbox.App.Projekte.Auftrag_RightsNHibernateImpl, Zetbox.Objects.NHibernateImpl">
                <property name="Identity" column="`Identity`" />
                <property name="Right" column="`Right`" />
            </composite-element>
        </set>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Projekte.KundeNHibernateImpl+KundeProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Projekte.KundeNHibernateImpl+KundeProxy, Zetbox.Objects.NHibernateImpl"
           schema="`projekte`"
           table="`Kunden`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`projekte`</param>
                <param name="sequence">`Kunden_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Adresse" 
                  column="`Adresse`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isList -->
        <set name="EMails"  inverse="true" batch-size="100">
            <key column="`fk_Kunde`" />
            <one-to-many class="Zetbox.App.Projekte.Kunde_EMails_CollectionEntryNHibernateImpl+Kunde_EMails_CollectionEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Kundenname" 
                  column="`Kundenname`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Land" 
                  column="`Land`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Ort" 
                  column="`Ort`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="PLZ" 
                  column="`PLZ`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Projekte.MitarbeiterNHibernateImpl+MitarbeiterProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Projekte.MitarbeiterNHibernateImpl+MitarbeiterProxy, Zetbox.Objects.NHibernateImpl"
           schema="`projekte`"
           table="`Mitarbeiter`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`projekte`</param>
                <param name="sequence">`Mitarbeiter_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="EMail" 
                  column="`EMail`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Geburtstag" type="Timestamp"
                  column="`Geburtstag`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Identity" column="`fk_Identity`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" unique="true" cascade="none" />

        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=Projekte_haben_Mitarbeiter_RelationEntry -->
        <!-- relEnd=Mitarbeiter otherEnd=Projekte -->
        <set name="Projekte" table="`Projekte_haben_Mitarbeiter`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_Mitarbeiter`" />
            <one-to-many class="Zetbox.App.Projekte.Projekte_haben_Mitarbeiter_RelationEntryNHibernateImpl+Projekte_haben_Mitarbeiter_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>

        <!-- ValueTypeProperty isValue -->
        <property name="SVNr" 
                  column="`SVNr`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="TelefonNummer" 
                  column="`TelefonNummer`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Projekte.ProjektNHibernateImpl+ProjektProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Projekte.ProjektNHibernateImpl+ProjektProxy, Zetbox.Objects.NHibernateImpl"
           schema="`projekte`"
           table="`Projekte`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`projekte`</param>
                <param name="sequence">`Projekte_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- CompoundObjectProperty IsList -->
        <set name="AuditJournal" inverse="true" batch-size="100">
            <key column="`fk_Projekt`" />
            <one-to-many class="Zetbox.App.Projekte.Projekt_AuditJournal_CollectionEntryNHibernateImpl+Projekt_AuditJournal_CollectionEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>
<!-- ObjectReferenceProperty -->
        <set name="Auftraege" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_Projekt`" />
            <one-to-many class="Zetbox.App.Projekte.AuftragNHibernateImpl+AuftragProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ValueTypeProperty AufwandGes is calculated and persisted -->
        <!-- ValueTypeProperty isValue -->
        <property name="AufwandGes" 
                  column="`AufwandGes`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Bis" type="Timestamp"
                  column="`Bis`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="KickOffAm" type="Timestamp"
                  column="`KickOffAm`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="KickOffBis" type="Timestamp"
                  column="`KickOffBis`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Kundenname" 
                  column="`Kundenname`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=Projekte_haben_Mitarbeiter_RelationEntry -->
        <!-- relEnd=Projekte otherEnd=Mitarbeiter -->
        <set name="Mitarbeiter" table="`Projekte_haben_Mitarbeiter`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_Projekte`" />
            <one-to-many class="Zetbox.App.Projekte.Projekte_haben_Mitarbeiter_RelationEntryNHibernateImpl+Projekte_haben_Mitarbeiter_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>

        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <set name="Tasks" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_Projekt`" />
            <one-to-many class="Zetbox.App.Projekte.TaskNHibernateImpl+TaskProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

        <!-- ValueTypeProperty isValue -->
        <property name="Von" type="Timestamp"
                  column="`Von`" 
                  optimistic-lock="false"/>

        <!-- map rights -->
        <set name="SecurityRightsCollectionImpl"
             schema="`projekte`"
             table="`Projekte_Rights`"
             lazy="true"
             fetch="select" 
             batch-size="100" >
            <key column="`ID`" />
            <composite-element class="Zetbox.App.Projekte.Projekt_RightsNHibernateImpl, Zetbox.Objects.NHibernateImpl">
                <property name="Identity" column="`Identity`" />
                <property name="Right" column="`Right`" />
            </composite-element>
        </set>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Projekte.TaskNHibernateImpl+TaskProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Projekte.TaskNHibernateImpl+TaskProxy, Zetbox.Objects.NHibernateImpl"
           schema="`projekte`"
           table="`Tasks`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`projekte`</param>
                <param name="sequence">`Tasks_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Aufwand" 
                  column="`Aufwand`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="DatumBis" type="Timestamp"
                  column="`DatumBis`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="DatumVon" type="Timestamp"
                  column="`DatumVon`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Projekt" column="`fk_Projekt`" class="Zetbox.App.Projekte.ProjektNHibernateImpl+ProjektProxy, Zetbox.Objects.NHibernateImpl" />


        <!-- map rights -->
        <set name="SecurityRightsCollectionImpl"
             schema="`projekte`"
             table="`Tasks_Rights`"
             lazy="true"
             fetch="select" 
             batch-size="100" >
            <key column="`ID`" />
            <composite-element class="Zetbox.App.Projekte.Task_RightsNHibernateImpl, Zetbox.Objects.NHibernateImpl">
                <property name="Identity" column="`Identity`" />
                <property name="Right" column="`Right`" />
            </composite-element>
        </set>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.SchemaMigration.MigrationLogNHibernateImpl+MigrationLogProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.SchemaMigration.MigrationLogNHibernateImpl+MigrationLogProxy, Zetbox.Objects.NHibernateImpl"
           schema="`migration`"
           table="`MigrationLogs`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`migration`</param>
                <param name="sequence">`MigrationLogs_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Destination" 
                  column="`Destination`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="DestinationRows" 
                  column="`DestinationRows`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Source" 
                  column="`Source`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="SourceRows" 
                  column="`SourceRows`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Timestamp" type="Timestamp"
                  column="`Timestamp`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.SchemaMigration.MigrationProjectNHibernateImpl+MigrationProjectProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.SchemaMigration.MigrationProjectNHibernateImpl+MigrationProjectProxy, Zetbox.Objects.NHibernateImpl"
           schema="`migration`"
           table="`MigrationProjects`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`migration`</param>
                <param name="sequence">`MigrationProjects_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Description" 
                  column="`Description`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="DestinationModule" column="`fk_Module`" class="Zetbox.App.Base.ModuleNHibernateImpl+ModuleProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <set name="StagingDatabases" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_MigrationProject`" />
            <one-to-many class="Zetbox.App.SchemaMigration.StagingDatabaseNHibernateImpl+StagingDatabaseProxy, Zetbox.Objects.NHibernateImpl" />
        </set>


        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.SchemaMigration.SourceColumnNHibernateImpl+SourceColumnProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.SchemaMigration.SourceColumnNHibernateImpl+SourceColumnProxy, Zetbox.Objects.NHibernateImpl"
           schema="`migration`"
           table="`SourceColumns`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`migration`</param>
                <param name="sequence">`SourceColumns_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Comment" 
                  column="`Comment`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="CompareNulls" 
                  column="`CompareNulls`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="DbType" 
                  column="`DbType`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Description" 
                  column="`Description`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=SourceColumn_created_Property_RelationEntry -->
        <!-- relEnd=SourceColumn otherEnd=Property -->
        <set name="DestinationProperty" table="`SourceColumn_created_Property`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_SourceColumn`" />
            <one-to-many class="Zetbox.App.SchemaMigration.SourceColumn_created_Property_RelationEntryNHibernateImpl+SourceColumn_created_Property_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <set name="EnumEntries" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_SourceColumn`" />
            <one-to-many class="Zetbox.App.SchemaMigration.SourceEnumNHibernateImpl+SourceEnumProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsNullable" 
                  column="`IsNullable`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="References" column="`fk_PK_Column`" class="Zetbox.App.SchemaMigration.SourceColumnNHibernateImpl+SourceColumnProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <set name="Referers" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_PK_Column`" />
            <one-to-many class="Zetbox.App.SchemaMigration.SourceColumnNHibernateImpl+SourceColumnProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

        <!-- ValueTypeProperty isValue -->
        <property name="Size" 
                  column="`Size`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="SourceTable" column="`fk_SourceTable`" class="Zetbox.App.SchemaMigration.SourceTableNHibernateImpl+SourceTableProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Status" 
                  column="`Status`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.SchemaMigration.SourceEnumNHibernateImpl+SourceEnumProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.SchemaMigration.SourceEnumNHibernateImpl+SourceEnumProxy, Zetbox.Objects.NHibernateImpl"
           schema="`migration`"
           table="`SourceEnums`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`migration`</param>
                <param name="sequence">`SourceEnums_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="DestinationValue" column="`fk_DestinationValue`" class="Zetbox.App.Base.EnumerationEntryNHibernateImpl+EnumerationEntryProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="SourceColumn" column="`fk_SourceColumn`" class="Zetbox.App.SchemaMigration.SourceColumnNHibernateImpl+SourceColumnProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="SourceValue" 
                  column="`SourceValue`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.SchemaMigration.SourceTableNHibernateImpl+SourceTableProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.SchemaMigration.SourceTableNHibernateImpl+SourceTableProxy, Zetbox.Objects.NHibernateImpl"
           schema="`migration`"
           table="`SourceTables`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`migration`</param>
                <param name="sequence">`SourceTables_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Comment" 
                  column="`Comment`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Description" 
                  column="`Description`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="DestinationObjectClass" column="`fk_ObjectClass`" class="Zetbox.App.Base.ObjectClassNHibernateImpl+ObjectClassProxy, Zetbox.Objects.NHibernateImpl" unique="true" cascade="none" />

        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <set name="SourceColumn" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_SourceTable`" />
            <one-to-many class="Zetbox.App.SchemaMigration.SourceColumnNHibernateImpl+SourceColumnProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <many-to-one name="StagingDatabase" column="`fk_StagingDatabase`" class="Zetbox.App.SchemaMigration.StagingDatabaseNHibernateImpl+StagingDatabaseProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Status" 
                  column="`Status`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.SchemaMigration.StagingDatabaseNHibernateImpl+StagingDatabaseProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.SchemaMigration.StagingDatabaseNHibernateImpl+StagingDatabaseProxy, Zetbox.Objects.NHibernateImpl"
           schema="`migration`"
           table="`StagingDatabases`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`migration`</param>
                <param name="sequence">`StagingDatabases_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ConnectionStringKey" 
                  column="`ConnectionStringKey`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Description" 
                  column="`Description`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="MigrationProject" column="`fk_MigrationProject`" class="Zetbox.App.SchemaMigration.MigrationProjectNHibernateImpl+MigrationProjectProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="OriginConnectionStringKey" 
                  column="`OriginConnectionStringKey`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Schema" 
                  column="`Schema`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <set name="SourceTables" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_StagingDatabase`" />
            <one-to-many class="Zetbox.App.SchemaMigration.SourceTableNHibernateImpl+SourceTableProxy, Zetbox.Objects.NHibernateImpl" />
        </set>


        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.ANewObjectClassNHibernateImpl+ANewObjectClassProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.ANewObjectClassNHibernateImpl+ANewObjectClassProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`NewObjectClasses`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`NewObjectClasses_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="TestString" 
                  column="`TestString`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.AnotherTestNHibernateImpl+AnotherTestProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.AnotherTestNHibernateImpl+AnotherTestProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`AnotherTests`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`AnotherTests_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.AntwortNHibernateImpl+AntwortProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.AntwortNHibernateImpl+AntwortProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`Antworten`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`Antworten_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Frage" 
                  column="`Frage`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Fragebogen" column="`fk_Ein_Fragebogen`" class="Zetbox.App.Test.FragebogenNHibernateImpl+FragebogenProxy, Zetbox.Objects.NHibernateImpl" />
        <property name="gute_Antworten_pos" column="`fk_Ein_Fragebogen_pos`" />

        <!-- ValueTypeProperty isValue -->
        <property name="FragenNummer" 
                  column="`FragenNummer`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="GegebeneAntwort" 
                  column="`GegebeneAntwort`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.AnyReferenceTestObjectNHibernateImpl+AnyReferenceTestObjectProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.AnyReferenceTestObjectNHibernateImpl+AnyReferenceTestObjectProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`AnyReferenceTestObjects`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`AnyReferenceTestObjects_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- CompoundObjectProperty isValue -->
        <component name="Any" class="Zetbox.App.Base.AnyReferenceNHibernateImpl,Zetbox.Objects.NHibernateImpl">
        <!-- ValueTypeProperty isValue -->
        <property name="ObjClass" 
                  column="`Any_ObjClass`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ObjGuid" 
                  column="`Any_ObjGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ObjID" 
                  column="`Any_ObjID`" 
                  optimistic-lock="false"/>
        </component>
        <!-- ValueTypeProperty isValue -->
        <property name="DisplayName" 
                  column="`DisplayName`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.CompanyNHibernateImpl+CompanyProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.CompanyNHibernateImpl+CompanyProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`Companies`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`Companies_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.DeactivatableTestObjectNHibernateImpl+DeactivatableTestObjectProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.DeactivatableTestObjectNHibernateImpl+DeactivatableTestObjectProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`DeactivatableTestObjects`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`DeactivatableTestObjects_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="IsDeactivated" 
                  column="`IsDeactivated`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.DocumentTestObjectNHibernateImpl+DocumentTestObjectProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.DocumentTestObjectNHibernateImpl+DocumentTestObjectProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`DocumentTestObjects`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`DocumentTestObjects_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="AnotherFile" column="`fk_AnotherFile`" class="at.dasz.DocumentManagement.FileNHibernateImpl+FileProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="AnyFile" column="`fk_AnyFile`" class="at.dasz.DocumentManagement.FileNHibernateImpl+FileProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.EventTestObjectNHibernateImpl+EventTestObjectProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.EventTestObjectNHibernateImpl+EventTestObjectProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`EventTestObjects`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`EventTestObjects_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="Event" column="`fk_Event`" class="Zetbox.App.Calendar.EventNHibernateImpl+EventProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.FragebogenNHibernateImpl+FragebogenProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.FragebogenNHibernateImpl+FragebogenProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`Frageboegen`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`Frageboegen_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <set name="Antworten" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_Ein_Fragebogen`" />
            <one-to-many class="Zetbox.App.Test.AntwortNHibernateImpl+AntwortProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

        <!-- ValueTypeProperty isValue -->
        <property name="BogenNummer" 
                  column="`BogenNummer`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=Student_füllt_aus_Testbogen_RelationEntry -->
        <!-- relEnd=Testbogen otherEnd=Student -->
        <set name="Student" table="`Student_füllt_aus_Testbogen`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_Testbogen`" />
            <one-to-many class="Zetbox.App.Test.Student_füllt_aus_Testbogen_RelationEntryNHibernateImpl+Student_füllt_aus_Testbogen_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>


        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.MethodTestNHibernateImpl+MethodTestProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.MethodTestNHibernateImpl+MethodTestProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`MethodTests`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`MethodTests_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <set name="Children" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_Parent`" />
            <one-to-many class="Zetbox.App.Test.MethodTestNHibernateImpl+MethodTestProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <many-to-one name="Parent" column="`fk_Parent`" class="Zetbox.App.Test.MethodTestNHibernateImpl+MethodTestProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="StringProp" 
                  column="`StringProp`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.MuhblahNHibernateImpl+MuhblahProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.MuhblahNHibernateImpl+MuhblahProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`Muhblas`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`Muhblas_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isList -->
        <set name="StringCollection"  inverse="true" batch-size="100">
            <key column="`fk_Muhblah`" />
            <one-to-many class="Zetbox.App.Test.Muhblah_StringCollection_CollectionEntryNHibernateImpl+Muhblah_StringCollection_CollectionEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>
        <!-- ValueTypeProperty isValue -->
        <property name="TestBool" 
                  column="`TestBool`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <set name="TestCustomObjects_List_Nav" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_MB_Role`" />
            <one-to-many class="Zetbox.App.Test.TestCustomObjectNHibernateImpl+TestCustomObjectProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=MB_Many_Role_has_TCO_ManyList_Role_RelationEntry -->
        <!-- relEnd=MB_Many_Role otherEnd=TCO_ManyList_Role -->
        <set name="TestCustomObjects_ManyList_Nav" table="`MB_Many_Role_has_TCO_ManyList_Role`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_MB_Many_Role`" />
            <one-to-many class="Zetbox.App.Test.MB_Many_Role_has_TCO_ManyList_Role_RelationEntryNHibernateImpl+MB_Many_Role_has_TCO_ManyList_Role_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <many-to-one name="TestCustomObjects_Nav" column="`fk_TCO_Role`" class="Zetbox.App.Test.TestCustomObjectNHibernateImpl+TestCustomObjectProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="TestCustomObjects_One_Nav" column="`fk_TCO_One_Role`" class="Zetbox.App.Test.TestCustomObjectNHibernateImpl+TestCustomObjectProxy, Zetbox.Objects.NHibernateImpl" unique="true" cascade="none" />

        <!-- ValueTypeProperty isValue -->
        <property name="TestDateTime" type="Timestamp"
                  column="`TestDateTime`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="TestEnum" 
                  column="`TestEnum`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="TestString" 
                  column="`TestString`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.N_to_M_relations_ANHibernateImpl+N_to_M_relations_AProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.N_to_M_relations_ANHibernateImpl+N_to_M_relations_AProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`N_to_M_relations_As`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`N_to_M_relations_As_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=ASide_connectsTo_BSide_RelationEntry -->
        <!-- relEnd=ASide otherEnd=BSide -->
        <set name="BSide" table="`ASide_connectsTo_BSide`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_ASide`" />
            <one-to-many class="Zetbox.App.Test.ASide_connectsTo_BSide_RelationEntryNHibernateImpl+ASide_connectsTo_BSide_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>

        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.N_to_M_relations_BNHibernateImpl+N_to_M_relations_BProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.N_to_M_relations_BNHibernateImpl+N_to_M_relations_BProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`N_to_M_relations_Bs`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`N_to_M_relations_Bs_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=ASide_connectsTo_BSide_RelationEntry -->
        <!-- relEnd=BSide otherEnd=ASide -->
        <set name="ASide" table="`ASide_connectsTo_BSide`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_BSide`" />
            <one-to-many class="Zetbox.App.Test.ASide_connectsTo_BSide_RelationEntryNHibernateImpl+ASide_connectsTo_BSide_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>

        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.One_to_N_relations_NNHibernateImpl+One_to_N_relations_NProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.One_to_N_relations_NNHibernateImpl+One_to_N_relations_NProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`One_to_N_relations_Ns`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`One_to_N_relations_Ns_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="OneSide" column="`fk_OneSide`" class="Zetbox.App.Test.One_to_N_relations_OneNHibernateImpl+One_to_N_relations_OneProxy, Zetbox.Objects.NHibernateImpl" />


        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.One_to_N_relations_OneNHibernateImpl+One_to_N_relations_OneProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.One_to_N_relations_OneNHibernateImpl+One_to_N_relations_OneProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`One_to_N_relations_Ones`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`One_to_N_relations_Ones_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <set name="NSide" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_OneSide`" />
            <one-to-many class="Zetbox.App.Test.One_to_N_relations_NNHibernateImpl+One_to_N_relations_NProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <set name="OrderedNSide" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_OneSide`" />
            <one-to-many class="Zetbox.App.Test.One_to_N_relations_OrderedNNHibernateImpl+One_to_N_relations_OrderedNProxy, Zetbox.Objects.NHibernateImpl" />
        </set>


        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.One_to_N_relations_OrderedNNHibernateImpl+One_to_N_relations_OrderedNProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.One_to_N_relations_OrderedNNHibernateImpl+One_to_N_relations_OrderedNProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`One_to_N_relations_OrderedNs`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`One_to_N_relations_OrderedNs_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="OneSide" column="`fk_OneSide`" class="Zetbox.App.Test.One_to_N_relations_OneNHibernateImpl+One_to_N_relations_OneProxy, Zetbox.Objects.NHibernateImpl" />
        <property name="OrderedNSide_pos" column="`fk_OneSide_pos`" />


        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.OrderedNEndNHibernateImpl+OrderedNEndProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.OrderedNEndNHibernateImpl+OrderedNEndProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`OrderedNEnds`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`OrderedNEnds_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="OneEnd" column="`fk_OneEnd`" class="Zetbox.App.Test.OrderedOneEndNHibernateImpl+OrderedOneEndProxy, Zetbox.Objects.NHibernateImpl" />
        <property name="NEnds_pos" column="`fk_OneEnd_pos`" />

        <!-- ValueTypeProperty isValue -->
        <property name="OtherInt" 
                  column="`OtherInt`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.OrderedOneEndNHibernateImpl+OrderedOneEndProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.OrderedOneEndNHibernateImpl+OrderedOneEndProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`OrderedOneEnds`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`OrderedOneEnds_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <set name="NEnds" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_OneEnd`" />
            <one-to-many class="Zetbox.App.Test.OrderedNEndNHibernateImpl+OrderedNEndProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

        <!-- ValueTypeProperty isValue -->
        <property name="SomeInt" 
                  column="`SomeInt`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.PropertyTestBaseNHibernateImpl+PropertyTestBaseProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.PropertyTestBaseNHibernateImpl+PropertyTestBaseProxy, Zetbox.Objects.NHibernateImpl"
           discriminator-value="test.PropertyTests"
           schema="`test`"
           table="`PropertyTests`"
           abstract="true"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`PropertyTests_ID_seq`</param>
            </generator>
        </id>
        <discriminator column="`__Discriminator`"
                       type="String" />


        <!-- define the properties -->

        <!-- define the subclasses -->
        <subclass
                name="Zetbox.App.Test.PropertyBoolTestNHibernateImpl+PropertyBoolTestProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Test.PropertyBoolTestNHibernateImpl+PropertyBoolTestProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="test.PropertyBoolTests"
                dynamic-update="false">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Nullable" 
                  column="`PropertyBoolTests_Nullable`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="NullableWithDefault" 
                  column="`PropertyBoolTests_NullableWithDefault`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Standard" 
                  column="`PropertyBoolTests_Standard`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="StandardWithDefault" 
                  column="`PropertyBoolTests_StandardWithDefault`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Test.PropertyDateTimeTestNHibernateImpl+PropertyDateTimeTestProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Test.PropertyDateTimeTestNHibernateImpl+PropertyDateTimeTestProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="test.PropertyDateTimeTests"
                dynamic-update="false">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Nullable" type="Timestamp"
                  column="`PropertyDateTimeTests_Nullable`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="NullableWithDefault" type="Timestamp"
                  column="`PropertyDateTimeTests_NullableWithDefault`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Standard" type="Timestamp"
                  column="`PropertyDateTimeTests_Standard`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="StandardWithDefault" type="Timestamp"
                  column="`PropertyDateTimeTests_StandardWithDefault`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Test.PropertyDecimalTestNHibernateImpl+PropertyDecimalTestProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Test.PropertyDecimalTestNHibernateImpl+PropertyDecimalTestProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="test.PropertyDecimalTests"
                dynamic-update="false">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Nullable" 
                  column="`PropertyDecimalTests_Nullable`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="NullableWithDefault" 
                  column="`PropertyDecimalTests_NullableWithDefault`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Standard" 
                  column="`PropertyDecimalTests_Standard`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="StandardWithDefault" 
                  column="`PropertyDecimalTests_StandardWithDefault`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Test.PropertyDoubleTestNHibernateImpl+PropertyDoubleTestProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Test.PropertyDoubleTestNHibernateImpl+PropertyDoubleTestProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="test.PropertyDoubleTests"
                dynamic-update="false">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Nullable" 
                  column="`PropertyDoubleTests_Nullable`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="NullableWithDefault" 
                  column="`PropertyDoubleTests_NullableWithDefault`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Standard" 
                  column="`PropertyDoubleTests_Standard`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="StandardWithDefault" 
                  column="`PropertyDoubleTests_StandardWithDefault`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Test.PropertyEnumTestNHibernateImpl+PropertyEnumTestProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Test.PropertyEnumTestNHibernateImpl+PropertyEnumTestProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="test.PropertyEnumTests"
                dynamic-update="false">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Nullable" 
                  column="`PropertyEnumTests_Nullable`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="NullableWithDefault" 
                  column="`PropertyEnumTests_NullableWithDefault`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Standard" 
                  column="`PropertyEnumTests_Standard`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="StandardWithDefault" 
                  column="`PropertyEnumTests_StandardWithDefault`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Test.PropertyGuidTestNHibernateImpl+PropertyGuidTestProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Test.PropertyGuidTestNHibernateImpl+PropertyGuidTestProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="test.PropertyGuidTests"
                dynamic-update="false">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Nullable" 
                  column="`PropertyGuidTests_Nullable`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="NullableWithDefault" 
                  column="`PropertyGuidTests_NullableWithDefault`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Standard" 
                  column="`PropertyGuidTests_Standard`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="StandardWithDefault" 
                  column="`PropertyGuidTests_StandardWithDefault`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Test.PropertyIntTestNHibernateImpl+PropertyIntTestProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Test.PropertyIntTestNHibernateImpl+PropertyIntTestProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="test.PropertyIntTests"
                dynamic-update="false">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Nullable" 
                  column="`PropertyIntTests_Nullable`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="NullableWithDefault" 
                  column="`PropertyIntTests_NullableWithDefault`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Standard" 
                  column="`PropertyIntTests_Standard`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="StandardWithDefault" 
                  column="`PropertyIntTests_StandardWithDefault`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Test.PropertyStringTestNHibernateImpl+PropertyStringTestProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Test.PropertyStringTestNHibernateImpl+PropertyStringTestProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="test.PropertyStringTests"
                dynamic-update="false">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Nullable" 
                  column="`PropertyStringTests_Nullable`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="NullableWithDefault" 
                  column="`PropertyStringTests_NullableWithDefault`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Standard" 
                  column="`PropertyStringTests_Standard`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="StandardWithDefault" 
                  column="`PropertyStringTests_StandardWithDefault`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>

    </class>
    <class name="Zetbox.App.Test.RecurrenceRuleTesterNHibernateImpl+RecurrenceRuleTesterProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.RecurrenceRuleTesterNHibernateImpl+RecurrenceRuleTesterProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`RecurrenceRuleTester`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`RecurrenceRuleTester_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- CompoundObjectProperty isValue -->
        <component name="Rule" class="Zetbox.App.Base.RecurrenceRuleNHibernateImpl,Zetbox.Objects.NHibernateImpl">
        <!-- ValueTypeProperty isValue -->
        <property name="ByDay" 
                  column="`Rule_ByDay`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ByHour" 
                  column="`Rule_ByHour`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ByMinute" 
                  column="`Rule_ByMinute`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ByMonth" 
                  column="`Rule_ByMonth`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ByMonthDay" 
                  column="`Rule_ByMonthDay`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="BySecond" 
                  column="`Rule_BySecond`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="BySetPos" 
                  column="`Rule_BySetPos`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ByWeekNumber" 
                  column="`Rule_ByWeekNumber`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ByYearDay" 
                  column="`Rule_ByYearDay`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Count" 
                  column="`Rule_Count`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Frequency" 
                  column="`Rule_Frequency`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Interval" 
                  column="`Rule_Interval`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Until" type="Timestamp"
                  column="`Rule_Until`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="WeekStart" 
                  column="`Rule_WeekStart`" 
                  optimistic-lock="false"/>
        </component>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.RequiredParentNHibernateImpl+RequiredParentProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.RequiredParentNHibernateImpl+RequiredParentProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`RequiredParents`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`RequiredParents_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <set name="Children" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_Parent`" />
            <one-to-many class="Zetbox.App.Test.RequiredParentChildNHibernateImpl+RequiredParentChildProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.RequiredParentChildNHibernateImpl+RequiredParentChildProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.RequiredParentChildNHibernateImpl+RequiredParentChildProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`RequiredParentChildren`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`RequiredParentChildren_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Parent" column="`fk_Parent`" class="Zetbox.App.Test.RequiredParentNHibernateImpl+RequiredParentProxy, Zetbox.Objects.NHibernateImpl" />


        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.SecurityChangeRightNHibernateImpl+SecurityChangeRightProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.SecurityChangeRightNHibernateImpl+SecurityChangeRightProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`SecurityChangeRights`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`SecurityChangeRights_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.SecurityTestChildNHibernateImpl+SecurityTestChildProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.SecurityTestChildNHibernateImpl+SecurityTestChildProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`SecurityTestChildren`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`SecurityTestChildren_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Identity" column="`fk_Identity`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Parent" column="`fk_Parent`" class="Zetbox.App.Test.SecurityTestParentNHibernateImpl+SecurityTestParentProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ValueTypeProperty ParentName is calculated and persisted -->
        <!-- ValueTypeProperty isValue -->
        <property name="ParentName" 
                  column="`ParentName`" 
                  optimistic-lock="false"/>

        <!-- map rights -->
        <set name="SecurityRightsCollectionImpl"
             schema="`test`"
             table="`SecurityTestChildren_Rights`"
             lazy="true"
             fetch="select" 
             batch-size="100" >
            <key column="`ID`" />
            <composite-element class="Zetbox.App.Test.SecurityTestChild_RightsNHibernateImpl, Zetbox.Objects.NHibernateImpl">
                <property name="Identity" column="`Identity`" />
                <property name="Right" column="`Right`" />
            </composite-element>
        </set>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.SecurityTestParentNHibernateImpl+SecurityTestParentProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.SecurityTestParentNHibernateImpl+SecurityTestParentProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`SecurityTestParents`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`SecurityTestParents_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <set name="Children" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_Parent`" />
            <one-to-many class="Zetbox.App.Test.SecurityTestChildNHibernateImpl+SecurityTestChildProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.TestCustomObjectNHibernateImpl+TestCustomObjectProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.TestCustomObjectNHibernateImpl+TestCustomObjectProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`TestCustomObjects`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`TestCustomObjects_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Birthday" type="Timestamp"
                  column="`Birthday`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <set name="MubBlah_List_Nav" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_TCO_Role`" />
            <one-to-many class="Zetbox.App.Test.MuhblahNHibernateImpl+MuhblahProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <many-to-one name="MubBlah_Nav" column="`fk_MB_Role`" class="Zetbox.App.Test.MuhblahNHibernateImpl+MuhblahProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=MB_Many_Role_has_TCO_ManyList_Role_RelationEntry -->
        <!-- relEnd=TCO_ManyList_Role otherEnd=MB_Many_Role -->
        <set name="MuhBlah_ManyList_Nav" table="`MB_Many_Role_has_TCO_ManyList_Role`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_TCO_ManyList_Role`" />
            <one-to-many class="Zetbox.App.Test.MB_Many_Role_has_TCO_ManyList_Role_RelationEntryNHibernateImpl+MB_Many_Role_has_TCO_ManyList_Role_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <one-to-one name="MuhBlah_One_Nav" class="Zetbox.App.Test.MuhblahNHibernateImpl+MuhblahProxy, Zetbox.Objects.NHibernateImpl" constrained="false" property-ref="TestCustomObjects_One_Nav" />
        <!-- ValueTypeProperty isValue -->
        <property name="PersonName" 
                  column="`PersonName`" 
                  optimistic-lock="false"/>
        <!-- CompoundObjectProperty isValue -->
        <component name="PhoneNumberMobile" class="Zetbox.App.Test.TestPhoneCompoundObjectNHibernateImpl,Zetbox.Objects.NHibernateImpl">
        <!-- ValueTypeProperty isValue -->
        <property name="AreaCode" 
                  column="`PhoneNumberMobile_AreaCode`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Number" 
                  column="`PhoneNumberMobile_Number`" 
                  optimistic-lock="false"/>
        </component>
        <!-- CompoundObjectProperty isValue -->
        <component name="PhoneNumberOffice" class="Zetbox.App.Test.TestPhoneCompoundObjectNHibernateImpl,Zetbox.Objects.NHibernateImpl">
        <!-- ValueTypeProperty isValue -->
        <property name="AreaCode" 
                  column="`PhoneNumberOffice_AreaCode`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Number" 
                  column="`PhoneNumberOffice_Number`" 
                  optimistic-lock="false"/>
        </component>
        <!-- CompoundObjectProperty IsList -->
        <set name="PhoneNumbersOther" inverse="true" batch-size="100">
            <key column="`fk_TestCustomObject`" />
            <one-to-many class="Zetbox.App.Test.TestCustomObject_PhoneNumbersOther_CollectionEntryNHibernateImpl+TestCustomObject_PhoneNumbersOther_CollectionEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.TestDecimalNHibernateImpl+TestDecimalProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.TestDecimalNHibernateImpl+TestDecimalProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`TestDecimals`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`TestDecimals_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Large" 
                  column="`Large`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="NoScale" 
                  column="`NoScale`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="SmallDecimal" 
                  column="`SmallDecimal`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.TestObjClassNHibernateImpl+TestObjClassProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.TestObjClassNHibernateImpl+TestObjClassProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`TestObjClasses`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`TestObjClasses_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ValueTypeProperty CalculatedEnumeration is calculated and persisted -->
        <!-- ValueTypeProperty isValue -->
        <property name="CalculatedEnumeration" 
                  column="`CalculatedEnumeration`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="MyIntProperty" 
                  column="`MyIntProperty`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="ObjectProp" column="`fk_ObjectProp`" class="Zetbox.App.Projekte.KundeNHibernateImpl+KundeProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="StringProp" 
                  column="`StringProp`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="TestEnumProp" 
                  column="`TestEnumProp`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="TestEnumWithDefault" 
                  column="`TestEnumWithDefault`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.TestStudentNHibernateImpl+TestStudentProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.TestStudentNHibernateImpl+TestStudentProxy, Zetbox.Objects.NHibernateImpl"
           schema="`test`"
           table="`TestStudenten`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`TestStudenten_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=Student_füllt_aus_Testbogen_RelationEntry -->
        <!-- relEnd=Student otherEnd=Testbogen -->
        <set name="Testbogen" table="`Student_füllt_aus_Testbogen`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_Student`" />
            <one-to-many class="Zetbox.App.Test.Student_füllt_aus_Testbogen_RelationEntryNHibernateImpl+Student_füllt_aus_Testbogen_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>


        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Test.TPHBaseObjNHibernateImpl+TPHBaseObjProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Test.TPHBaseObjNHibernateImpl+TPHBaseObjProxy, Zetbox.Objects.NHibernateImpl"
           discriminator-value="test.TPHBaseObjs"
           schema="`test`"
           table="`TPHBaseObjs`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`test`</param>
                <param name="sequence">`TPHBaseObjs_ID_seq`</param>
            </generator>
        </id>
        <discriminator column="`__Discriminator`"
                       type="String" />


        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->
        <subclass
                name="Zetbox.App.Test.TPHDerivedAObjNHibernateImpl+TPHDerivedAObjProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Test.TPHDerivedAObjNHibernateImpl+TPHDerivedAObjProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="test.TPHDerivedAObjs"
                dynamic-update="true">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="AInt" 
                  column="`TPHDerivedAObjs_AInt`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="AString" 
                  column="`TPHDerivedAObjs_AString`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Test.TPHDerivedBObjNHibernateImpl+TPHDerivedBObjProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Test.TPHDerivedBObjNHibernateImpl+TPHDerivedBObjProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="test.TPHDerivedBObjs"
                dynamic-update="true">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="BString" 
                  column="`TPHDerivedBObjs_BString`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>

    </class>
    <class name="Zetbox.App.Base.AbstractModuleMemberNHibernateImpl+AbstractModuleMemberProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.AbstractModuleMemberNHibernateImpl+AbstractModuleMemberProxy, Zetbox.Objects.NHibernateImpl"
           schema="`base`"
           table="`AbstractModuleMembers`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`AbstractModuleMembers_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Module" column="`fk_Module`" class="Zetbox.App.Base.ModuleNHibernateImpl+ModuleProxy, Zetbox.Objects.NHibernateImpl" />


        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Base.AccessControlNHibernateImpl+AccessControlProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.AccessControlNHibernateImpl+AccessControlProxy, Zetbox.Objects.NHibernateImpl"
           schema="`base`"
           table="`AccessControls`"
           abstract="true"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`AccessControls_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
<!-- ValueTypeProperty Description is calculated and persisted -->
        <!-- ValueTypeProperty isValue -->
        <property name="Description" 
                  column="`Description`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Module" column="`fk_Module`" class="Zetbox.App.Base.ModuleNHibernateImpl+ModuleProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Notes" 
                  column="`Notes`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="ObjectClass" column="`fk_ObjectClass`" class="Zetbox.App.Base.ObjectClassNHibernateImpl+ObjectClassProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Rights" 
                  column="`Rights`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->
        <joined-subclass
                name="Zetbox.App.Base.GroupMembershipNHibernateImpl+GroupMembershipProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.GroupMembershipNHibernateImpl+GroupMembershipProxy, Zetbox.Objects.NHibernateImpl"
                schema="`base`"
                table="`GroupMemberships`"
                dynamic-update="true">
            
            <!-- base class reference -->
            <key column="`ID`" />

            <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="Group" column="`fk_Group`" class="Zetbox.App.Base.GroupNHibernateImpl+GroupProxy, Zetbox.Objects.NHibernateImpl" />


            <!-- define the subclasses -->

        </joined-subclass>
        <joined-subclass
                name="Zetbox.App.Base.RoleMembershipNHibernateImpl+RoleMembershipProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.RoleMembershipNHibernateImpl+RoleMembershipProxy, Zetbox.Objects.NHibernateImpl"
                schema="`base`"
                table="`RoleMemberships`"
                dynamic-update="true">
            
            <!-- base class reference -->
            <key column="`ID`" />

            <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=RoleMembership_resolves_Relations_RelationEntry -->
        <!-- relEnd=RoleMembership otherEnd=Relations -->
        <set name="Relations" table="`RoleMembership_resolves_Relations`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_RoleMembership`" />
            <one-to-many class="Zetbox.App.Base.RoleMembership_resolves_Relations_RelationEntryNHibernateImpl+RoleMembership_resolves_Relations_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>


            <!-- define the subclasses -->

        </joined-subclass>

    </class>
    <class name="Zetbox.App.Base.AssemblyNHibernateImpl+AssemblyProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.AssemblyNHibernateImpl+AssemblyProxy, Zetbox.Objects.NHibernateImpl"
           schema="`base`"
           table="`Assemblies`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`Assemblies_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="DeploymentRestrictions" 
                  column="`DeploymentRestrictions`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Module" column="`fk_Module`" class="Zetbox.App.Base.ModuleNHibernateImpl+ModuleProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Base.BaseParameterNHibernateImpl+BaseParameterProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.BaseParameterNHibernateImpl+BaseParameterProxy, Zetbox.Objects.NHibernateImpl"
           discriminator-value="base.BaseParameters"
           schema="`base`"
           table="`BaseParameters`"
           abstract="true"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`BaseParameters_ID_seq`</param>
            </generator>
        </id>
        <discriminator column="`__Discriminator`"
                       type="String" />


        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Description" 
                  column="`Description`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="HelpText" 
                  column="`HelpText`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsList" 
                  column="`IsList`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsNullable" 
                  column="`IsNullable`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsReturnParameter" 
                  column="`IsReturnParameter`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Label" 
                  column="`Label`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Method" column="`fk_Method`" class="Zetbox.App.Base.MethodNHibernateImpl+MethodProxy, Zetbox.Objects.NHibernateImpl" />
        <property name="Parameter_pos" column="`fk_Method_pos`" />

        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->
        <subclass
                name="Zetbox.App.Base.BoolParameterNHibernateImpl+BoolParameterProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.BoolParameterNHibernateImpl+BoolParameterProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.BoolParameters"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.CLRObjectParameterNHibernateImpl+CLRObjectParameterProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.CLRObjectParameterNHibernateImpl+CLRObjectParameterProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.CLRObjectParameters"
                dynamic-update="true">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="TypeRef" 
                  column="`CLRObjectParameters_TypeRef`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.CompoundObjectParameterNHibernateImpl+CompoundObjectParameterProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.CompoundObjectParameterNHibernateImpl+CompoundObjectParameterProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.CompoundObjectParameters"
                dynamic-update="true">
            

            <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="CompoundObject" column="`CompoundObjectParameters_fk_CompoundObject`" class="Zetbox.App.Base.CompoundObjectNHibernateImpl+CompoundObjectProxy, Zetbox.Objects.NHibernateImpl" />


            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.DateTimeParameterNHibernateImpl+DateTimeParameterProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.DateTimeParameterNHibernateImpl+DateTimeParameterProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.DateTimeParameters"
                dynamic-update="true">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="DateTimeStyle" 
                  column="`DateTimeParameters_DateTimeStyle`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.DecimalParameterNHibernateImpl+DecimalParameterProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.DecimalParameterNHibernateImpl+DecimalParameterProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.DecimalParameters"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.DoubleParameterNHibernateImpl+DoubleParameterProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.DoubleParameterNHibernateImpl+DoubleParameterProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.DoubleParameters"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.EnumParameterNHibernateImpl+EnumParameterProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.EnumParameterNHibernateImpl+EnumParameterProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.EnumParameters"
                dynamic-update="true">
            

            <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="Enumeration" column="`EnumParameters_fk_Enumeration`" class="Zetbox.App.Base.EnumerationNHibernateImpl+EnumerationProxy, Zetbox.Objects.NHibernateImpl" />


            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.IntParameterNHibernateImpl+IntParameterProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.IntParameterNHibernateImpl+IntParameterProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.IntParameters"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.ObjectReferenceParameterNHibernateImpl+ObjectReferenceParameterProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.ObjectReferenceParameterNHibernateImpl+ObjectReferenceParameterProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.ObjectParameters"
                dynamic-update="true">
            

            <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ObjectClass" column="`ObjectParameters_fk_ObjectClass`" class="Zetbox.App.Base.ObjectClassNHibernateImpl+ObjectClassProxy, Zetbox.Objects.NHibernateImpl" />


            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.StringParameterNHibernateImpl+StringParameterProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.StringParameterNHibernateImpl+StringParameterProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.StringParameters"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->

        </subclass>

    </class>
    <class name="Zetbox.App.Base.BlobNHibernateImpl+BlobProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.BlobNHibernateImpl+BlobProxy, Zetbox.Objects.NHibernateImpl"
           schema="`base`"
           table="`Blobs`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`Blobs_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="MimeType" 
                  column="`MimeType`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="OriginalName" 
                  column="`OriginalName`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="StoragePath" 
                  column="`StoragePath`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Base.ConstraintNHibernateImpl+ConstraintProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.ConstraintNHibernateImpl+ConstraintProxy, Zetbox.Objects.NHibernateImpl"
           discriminator-value="base.Constraints"
           schema="`base`"
           table="`Constraints`"
           abstract="true"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`Constraints_ID_seq`</param>
            </generator>
        </id>
        <discriminator column="`__Discriminator`"
                       type="String" />


        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="ConstrainedProperty" column="`fk_ConstrainedProperty`" class="Zetbox.App.Base.PropertyNHibernateImpl+PropertyProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Reason" 
                  column="`Reason`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->
        <subclass
                name="Zetbox.App.Base.IntegerRangeConstraintNHibernateImpl+IntegerRangeConstraintProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.IntegerRangeConstraintNHibernateImpl+IntegerRangeConstraintProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.IntegerRangeConstraints"
                dynamic-update="true">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Max" 
                  column="`IntegerRangeConstraints_Max`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Min" 
                  column="`IntegerRangeConstraints_Min`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.InvokingConstraintNHibernateImpl+InvokingConstraintProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.InvokingConstraintNHibernateImpl+InvokingConstraintProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.InvokingConstraints"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.IsValidIdentifierConstraintNHibernateImpl+IsValidIdentifierConstraintProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.IsValidIdentifierConstraintNHibernateImpl+IsValidIdentifierConstraintProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.IsValidIdentifierConstraints"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->
        <subclass
                name="Zetbox.App.Base.IsValidNamespaceConstraintNHibernateImpl+IsValidNamespaceConstraintProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.IsValidNamespaceConstraintNHibernateImpl+IsValidNamespaceConstraintProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.IsValidNamespaceConstraints"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->

        </subclass>

        </subclass>
        <subclass
                name="Zetbox.App.Base.MethodInvocationConstraintNHibernateImpl+MethodInvocationConstraintProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.MethodInvocationConstraintNHibernateImpl+MethodInvocationConstraintProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.MethodInvocationConstraints"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.NotNullableConstraintNHibernateImpl+NotNullableConstraintProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.NotNullableConstraintNHibernateImpl+NotNullableConstraintProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.NotNullableConstraints"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.ReadOnlyConstraintNHibernateImpl+ReadOnlyConstraintProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.ReadOnlyConstraintNHibernateImpl+ReadOnlyConstraintProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.ReadOnlyConstraints"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->
        <subclass
                name="Zetbox.App.Base.ClientReadOnlyConstraintNHibernateImpl+ClientReadOnlyConstraintProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.ClientReadOnlyConstraintNHibernateImpl+ClientReadOnlyConstraintProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.ClientReadOnlyConstraints"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.InitOnlyConstraintNHibernateImpl+InitOnlyConstraintProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.InitOnlyConstraintNHibernateImpl+InitOnlyConstraintProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.InitOnlyConstraints"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.ViewReadOnlyConstraintNHibernateImpl+ViewReadOnlyConstraintProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.ViewReadOnlyConstraintNHibernateImpl+ViewReadOnlyConstraintProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.ViewReadOnlyConstraints"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->

        </subclass>

        </subclass>
        <subclass
                name="Zetbox.App.Base.StringRangeConstraintNHibernateImpl+StringRangeConstraintProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.StringRangeConstraintNHibernateImpl+StringRangeConstraintProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.StringRangeConstraints"
                dynamic-update="true">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="MaxLength" 
                  column="`StringRangeConstraints_MaxLength`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="MinLength" 
                  column="`StringRangeConstraints_MinLength`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>

    </class>
    <class name="Zetbox.App.Base.CurrentSchemaNHibernateImpl+CurrentSchemaProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.CurrentSchemaNHibernateImpl+CurrentSchemaProxy, Zetbox.Objects.NHibernateImpl"
           schema="`base`"
           table="`CurrentSchema`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`CurrentSchema_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Schema" 
                  column="`Schema`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Version" 
                  column="`Version`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Base.DataTypeNHibernateImpl+DataTypeProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.DataTypeNHibernateImpl+DataTypeProxy, Zetbox.Objects.NHibernateImpl"
           schema="`base`"
           table="`DataTypes`"
           abstract="true"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`DataTypes_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <set name="Constraints" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_Constrained`" />
            <one-to-many class="Zetbox.App.Base.InstanceConstraintNHibernateImpl+InstanceConstraintProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="DefaultIcon" column="`fk_DefaultIcon`" class="Zetbox.App.GUI.IconNHibernateImpl+IconProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Description" 
                  column="`Description`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="HelpText" 
                  column="`HelpText`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=DataType_implements_ImplementedInterfaces_RelationEntry -->
        <!-- relEnd=DataType otherEnd=ImplementedInterfaces -->
        <set name="ImplementsInterfaces" table="`DataType_implements_ImplementedInterfaces`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_DataType`" />
            <one-to-many class="Zetbox.App.Base.DataType_implements_ImplementedInterfaces_RelationEntryNHibernateImpl+DataType_implements_ImplementedInterfaces_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <set name="Methods" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_ObjectClass`" />
            <one-to-many class="Zetbox.App.Base.MethodNHibernateImpl+MethodProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <many-to-one name="Module" column="`fk_Module`" class="Zetbox.App.Base.ModuleNHibernateImpl+ModuleProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <set name="Properties" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_ObjectClass`" />
            <one-to-many class="Zetbox.App.Base.PropertyNHibernateImpl+PropertyProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <many-to-one name="RequestedKind" column="`fk_ControlKind`" class="Zetbox.App.GUI.ControlKindNHibernateImpl+ControlKindProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ShowIconInLists" 
                  column="`ShowIconInLists`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ShowIdInLists" 
                  column="`ShowIdInLists`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ShowNameInLists" 
                  column="`ShowNameInLists`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->
        <joined-subclass
                name="Zetbox.App.Base.CompoundObjectNHibernateImpl+CompoundObjectProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.CompoundObjectNHibernateImpl+CompoundObjectProxy, Zetbox.Objects.NHibernateImpl"
                schema="`base`"
                table="`CompoundObjects`"
                dynamic-update="true">
            
            <!-- base class reference -->
            <key column="`ID`" />

            <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="DefaultPropertyViewModelDescriptor" column="`fk_DefaultPropViewModelDescriptor`" class="Zetbox.App.GUI.ViewModelDescriptorNHibernateImpl+ViewModelDescriptorProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="DefaultViewModelDescriptor" column="`fk_DefaultViewModelDescriptor`" class="Zetbox.App.GUI.ViewModelDescriptorNHibernateImpl+ViewModelDescriptorProxy, Zetbox.Objects.NHibernateImpl" />


            <!-- define the subclasses -->

        </joined-subclass>
        <joined-subclass
                name="Zetbox.App.Base.EnumerationNHibernateImpl+EnumerationProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.EnumerationNHibernateImpl+EnumerationProxy, Zetbox.Objects.NHibernateImpl"
                schema="`base`"
                table="`Enumerations`"
                dynamic-update="true">
            
            <!-- base class reference -->
            <key column="`ID`" />

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="AreFlags" 
                  column="`AreFlags`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <set name="EnumerationEntries" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_Enumeration`" />
            <one-to-many class="Zetbox.App.Base.EnumerationEntryNHibernateImpl+EnumerationEntryProxy, Zetbox.Objects.NHibernateImpl" />
        </set>


            <!-- define the subclasses -->

        </joined-subclass>
        <joined-subclass
                name="Zetbox.App.Base.InterfaceNHibernateImpl+InterfaceProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.InterfaceNHibernateImpl+InterfaceProxy, Zetbox.Objects.NHibernateImpl"
                schema="`base`"
                table="`Interfaces`"
                dynamic-update="true">
            
            <!-- base class reference -->
            <key column="`ID`" />

            <!-- define the properties -->

            <!-- define the subclasses -->

        </joined-subclass>
        <joined-subclass
                name="Zetbox.App.Base.ObjectClassNHibernateImpl+ObjectClassProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.ObjectClassNHibernateImpl+ObjectClassProxy, Zetbox.Objects.NHibernateImpl"
                schema="`base`"
                table="`ObjectClasses`"
                dynamic-update="true">
            
            <!-- base class reference -->
            <key column="`ID`" />

            <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <set name="AccessControlList" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_ObjectClass`" />
            <one-to-many class="Zetbox.App.Base.AccessControlNHibernateImpl+AccessControlProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <many-to-one name="BaseObjectClass" column="`fk_BaseObjectClass`" class="Zetbox.App.Base.ObjectClassNHibernateImpl+ObjectClassProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ValueTypeProperty CodeTemplate is calculated and persisted -->
        <!-- ValueTypeProperty isValue -->
        <property name="CodeTemplate" 
                  column="`CodeTemplate`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="DefaultViewModelDescriptor" column="`fk_DefaultViewModelDescriptor`" class="Zetbox.App.GUI.ViewModelDescriptorNHibernateImpl+ViewModelDescriptorProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <set name="FilterConfigurations" batch-size="100" cascade="none" inverse="true" >
            <key column="`ObjectClassFilterConfigurations_fk_ObjectClass`" />
            <one-to-many class="Zetbox.App.GUI.ObjectClassFilterConfigurationNHibernateImpl+ObjectClassFilterConfigurationProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

        <!-- ValueTypeProperty isValue -->
        <property name="IsAbstract" 
                  column="`IsAbstract`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsCreatedProgrammatically" 
                  column="`IsCreatedProgrammatically`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsFrozenObject" 
                  column="`IsFrozenObject`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsSimpleObject" 
                  column="`IsSimpleObject`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <set name="SubClasses" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_BaseObjectClass`" />
            <one-to-many class="Zetbox.App.Base.ObjectClassNHibernateImpl+ObjectClassProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

        <!-- ValueTypeProperty isValue -->
        <property name="TableMapping" 
                  column="`TableMapping`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="TableName" 
                  column="`TableName`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </joined-subclass>

    </class>
    <class name="Zetbox.App.Base.DefaultPropertyValueNHibernateImpl+DefaultPropertyValueProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.DefaultPropertyValueNHibernateImpl+DefaultPropertyValueProxy, Zetbox.Objects.NHibernateImpl"
           discriminator-value="base.DefaultPropertyValues"
           schema="`base`"
           table="`DefaultPropertyValues`"
           abstract="true"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`DefaultPropertyValues_ID_seq`</param>
            </generator>
        </id>
        <discriminator column="`__Discriminator`"
                       type="String" />


        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Property" column="`fk_Property`" class="Zetbox.App.Base.PropertyNHibernateImpl+PropertyProxy, Zetbox.Objects.NHibernateImpl" unique="true" />


        <!-- define the subclasses -->
        <subclass
                name="Zetbox.App.Base.BoolDefaultValueNHibernateImpl+BoolDefaultValueProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.BoolDefaultValueNHibernateImpl+BoolDefaultValueProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.BoolDefaultValues"
                dynamic-update="true">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="BoolValue" 
                  column="`BoolDefaultValues_BoolValue`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.CurrentDateTimeDefaultValueNHibernateImpl+CurrentDateTimeDefaultValueProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.CurrentDateTimeDefaultValueNHibernateImpl+CurrentDateTimeDefaultValueProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.CurrentDateTimeDefaultValues"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.DecimalDefaultValueNHibernateImpl+DecimalDefaultValueProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.DecimalDefaultValueNHibernateImpl+DecimalDefaultValueProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.DecimalDefaultValues"
                dynamic-update="true">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="DecimalValue" 
                  column="`DecimalDefaultValues_DecimalValue`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.DoubleDefaultValueNHibernateImpl+DoubleDefaultValueProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.DoubleDefaultValueNHibernateImpl+DoubleDefaultValueProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.DoubleDefaultValues"
                dynamic-update="true">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="DoubleValue" 
                  column="`DoubleDefaultValues_DoubleValue`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.EnumDefaultValueNHibernateImpl+EnumDefaultValueProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.EnumDefaultValueNHibernateImpl+EnumDefaultValueProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.EnumDefaultValues"
                dynamic-update="true">
            

            <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="EnumValue" column="`EnumDefaultValues_fk_EnumValue`" class="Zetbox.App.Base.EnumerationEntryNHibernateImpl+EnumerationEntryProxy, Zetbox.Objects.NHibernateImpl" />


            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.IntDefaultValueNHibernateImpl+IntDefaultValueProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.IntDefaultValueNHibernateImpl+IntDefaultValueProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.IntDefaultValues"
                dynamic-update="true">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="IntValue" 
                  column="`IntDefaultValues_IntValue`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.NewGuidDefaultValueNHibernateImpl+NewGuidDefaultValueProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.NewGuidDefaultValueNHibernateImpl+NewGuidDefaultValueProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.NewGuidDefaultValues"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.StringDefaultValueNHibernateImpl+StringDefaultValueProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.StringDefaultValueNHibernateImpl+StringDefaultValueProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.StringDefaultValues"
                dynamic-update="true">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="DefaultValue" 
                  column="`StringDefaultValues_DefaultValue`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>

    </class>
    <class name="Zetbox.App.Base.EnumerationEntryNHibernateImpl+EnumerationEntryProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.EnumerationEntryNHibernateImpl+EnumerationEntryProxy, Zetbox.Objects.NHibernateImpl"
           schema="`base`"
           table="`EnumerationEntries`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`EnumerationEntries_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Description" 
                  column="`Description`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Enumeration" column="`fk_Enumeration`" class="Zetbox.App.Base.EnumerationNHibernateImpl+EnumerationProxy, Zetbox.Objects.NHibernateImpl" />
        <property name="EnumerationEntries_pos" column="`fk_Enumeration_pos`" />

        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Label" 
                  column="`Label`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="NotSelectable" 
                  column="`NotSelectable`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Value" 
                  column="`Value`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Base.ExceptionLogEntryNHibernateImpl+ExceptionLogEntryProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.ExceptionLogEntryNHibernateImpl+ExceptionLogEntryProxy, Zetbox.Objects.NHibernateImpl"
           schema="`base`"
           table="`ExceptionLog`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`ExceptionLog_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Date" type="Timestamp"
                  column="`Date`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Exception" 
                  column="`Exception`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Level" 
                  column="`Level`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Logger" 
                  column="`Logger`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Message" 
                  column="`Message`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Thread" 
                  column="`Thread`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Base.GroupNHibernateImpl+GroupProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.GroupNHibernateImpl+GroupProxy, Zetbox.Objects.NHibernateImpl"
           schema="`base`"
           table="`Groups`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`Groups_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=Identities_memberOf_Groups_RelationEntry -->
        <!-- relEnd=Groups otherEnd=Identities -->
        <set name="Member" table="`Identities_memberOf_Groups`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_Groups`" />
            <one-to-many class="Zetbox.App.Base.Identities_memberOf_Groups_RelationEntryNHibernateImpl+Identities_memberOf_Groups_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <many-to-one name="Module" column="`fk_Module`" class="Zetbox.App.Base.ModuleNHibernateImpl+ModuleProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl"
           schema="`base`"
           table="`Identities`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`Identities_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="CalendarConfiguration" 
                  column="`CalendarConfiguration`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="DisplayName" 
                  column="`DisplayName`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=Identities_memberOf_Groups_RelationEntry -->
        <!-- relEnd=Identities otherEnd=Groups -->
        <set name="Groups" table="`Identities_memberOf_Groups`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_Identities`" />
            <one-to-many class="Zetbox.App.Base.Identities_memberOf_Groups_RelationEntryNHibernateImpl+Identities_memberOf_Groups_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>

        <!-- ValueTypeProperty isValue -->
        <property name="IsDeactivated" 
                  column="`IsDeactivated`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="LoginToken" 
                  column="`LoginToken`" 
                  optimistic-lock="false"/>
        <!-- CompoundObjectProperty isValue -->
        <component name="OpenID" class="Zetbox.App.Base.OpenIDNHibernateImpl,Zetbox.Objects.NHibernateImpl">
        <!-- ValueTypeProperty isValue -->
        <property name="Provider" 
                  column="`OpenID_Provider`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="UserID" 
                  column="`OpenID_UserID`" 
                  optimistic-lock="false"/>
        </component>
        <!-- ValueTypeProperty isValue -->
        <property name="Password" 
                  column="`Password`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="UserName" 
                  column="`UserName`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Base.InstanceConstraintNHibernateImpl+InstanceConstraintProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.InstanceConstraintNHibernateImpl+InstanceConstraintProxy, Zetbox.Objects.NHibernateImpl"
           schema="`base`"
           table="`InstanceConstraint`"
           abstract="true"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`InstanceConstraint_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="Constrained" column="`fk_Constrained`" class="Zetbox.App.Base.DataTypeNHibernateImpl+DataTypeProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Reason" 
                  column="`Reason`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->
        <joined-subclass
                name="Zetbox.App.Base.IndexConstraintNHibernateImpl+IndexConstraintProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.IndexConstraintNHibernateImpl+IndexConstraintProxy, Zetbox.Objects.NHibernateImpl"
                schema="`base`"
                table="`IndexConstraints`"
                dynamic-update="false">
            
            <!-- base class reference -->
            <key column="`ID`" />

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="IsUnique" 
                  column="`IsUnique`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=UniqueContraints_ensures_unique_on_Properties_RelationEntry -->
        <!-- relEnd=UniqueContraints otherEnd=Properties -->
        <set name="Properties" table="`UniqueContraints_ensures_unique_on_Properties`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_UniqueContraints`" />
            <one-to-many class="Zetbox.App.Base.UniqueContraints_ensures_unique_on_Properties_RelationEntryNHibernateImpl+UniqueContraints_ensures_unique_on_Properties_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>


            <!-- define the subclasses -->
        <joined-subclass
                name="Zetbox.App.Base.FullTextIndexConstraintNHibernateImpl+FullTextIndexConstraintProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.FullTextIndexConstraintNHibernateImpl+FullTextIndexConstraintProxy, Zetbox.Objects.NHibernateImpl"
                schema="`base`"
                table="`FullTextIndexConstraints`"
                dynamic-update="false">
            
            <!-- base class reference -->
            <key column="`ID`" />

            <!-- define the properties -->

            <!-- define the subclasses -->

        </joined-subclass>

        </joined-subclass>

    </class>
    <class name="Zetbox.App.Base.MethodNHibernateImpl+MethodProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.MethodNHibernateImpl+MethodProxy, Zetbox.Objects.NHibernateImpl"
           schema="`base`"
           table="`Methods`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`Methods_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="CategoryTags" 
                  column="`CategoryTags`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ValueTypeProperty CodeTemplate is calculated and persisted -->
        <!-- ValueTypeProperty isValue -->
        <property name="CodeTemplate" 
                  column="`CodeTemplate`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Description" 
                  column="`Description`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="HelpText" 
                  column="`HelpText`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Icon" column="`fk_Icon`" class="Zetbox.App.GUI.IconNHibernateImpl+IconProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="InvokeOnServer" 
                  column="`InvokeOnServer`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsDisplayable" 
                  column="`IsDisplayable`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Label" 
                  column="`Label`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Module" column="`fk_Module`" class="Zetbox.App.Base.ModuleNHibernateImpl+ModuleProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="ObjectClass" column="`fk_ObjectClass`" class="Zetbox.App.Base.DataTypeNHibernateImpl+DataTypeProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <set name="Parameter" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_Method`" />
            <one-to-many class="Zetbox.App.Base.BaseParameterNHibernateImpl+BaseParameterProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=ObjRefProp_shows_Methods_RelationEntry -->
        <!-- relEnd=Methods otherEnd=ObjRefProp -->
        <set name="ShowByProperties" table="`ObjRefProp_shows_Methods`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_Methods`" />
            <one-to-many class="Zetbox.App.GUI.ObjRefProp_shows_Methods_RelationEntryNHibernateImpl+ObjRefProp_shows_Methods_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>


        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Base.ModuleNHibernateImpl+ModuleProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.ModuleNHibernateImpl+ModuleProxy, Zetbox.Objects.NHibernateImpl"
           schema="`base`"
           table="`Modules`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`Modules_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Description" 
                  column="`Description`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Namespace" 
                  column="`Namespace`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="SchemaName" 
                  column="`SchemaName`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Base.PropertyNHibernateImpl+PropertyProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.PropertyNHibernateImpl+PropertyProxy, Zetbox.Objects.NHibernateImpl"
           discriminator-value="base.Properties"
           schema="`base`"
           table="`Properties`"
           abstract="true"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`Properties_ID_seq`</param>
            </generator>
        </id>
        <discriminator column="`__Discriminator`"
                       type="String" />


        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="AllowFilterCollections" 
                  column="`AllowFilterCollections`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="CategoryTags" 
                  column="`CategoryTags`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ValueTypeProperty CodeTemplate is calculated and persisted -->
        <!-- ValueTypeProperty isValue -->
        <property name="CodeTemplate" 
                  column="`CodeTemplate`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <set name="Constraints" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_ConstrainedProperty`" />
            <one-to-many class="Zetbox.App.Base.ConstraintNHibernateImpl+ConstraintProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="DefaultSortPriority" 
                  column="`DefaultSortPriority`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <one-to-one name="DefaultValue" class="Zetbox.App.Base.DefaultPropertyValueNHibernateImpl+DefaultPropertyValueProxy, Zetbox.Objects.NHibernateImpl" constrained="false" property-ref="Property" />
        <!-- ValueTypeProperty isValue -->
        <property name="Description" 
                  column="`Description`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="DisableExport" 
                  column="`DisableExport`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <one-to-one name="FilterConfiguration" class="Zetbox.App.GUI.PropertyFilterConfigurationNHibernateImpl+PropertyFilterConfigurationProxy, Zetbox.Objects.NHibernateImpl" constrained="false" property-ref="Property" />
        <!-- ValueTypeProperty isValue -->
        <property name="HelpText" 
                  column="`HelpText`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Label" 
                  column="`Label`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Module" column="`fk_Module`" class="Zetbox.App.Base.ModuleNHibernateImpl+ModuleProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="ObjectClass" column="`fk_ObjectClass`" class="Zetbox.App.Base.DataTypeNHibernateImpl+DataTypeProxy, Zetbox.Objects.NHibernateImpl" />
        <property name="Properties_pos" column="`fk_ObjectClass_pos`" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="RequestedKind" column="`fk_ControlKind`" class="Zetbox.App.GUI.ControlKindNHibernateImpl+ControlKindProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="RequestedWidth" 
                  column="`RequestedWidth`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="ValueModelDescriptor" column="`fk_ValueModelDescriptor`" class="Zetbox.App.GUI.ViewModelDescriptorNHibernateImpl+ViewModelDescriptorProxy, Zetbox.Objects.NHibernateImpl" />


        <!-- define the subclasses -->
        <subclass
                name="Zetbox.App.Base.CalculatedObjectReferencePropertyNHibernateImpl+CalculatedObjectReferencePropertyProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.CalculatedObjectReferencePropertyNHibernateImpl+CalculatedObjectReferencePropertyProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.CalculatedObjectReferenceProperties"
                dynamic-update="true">
            

            <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=CalculatedReference_dependsOn_InputProperties_RelationEntry -->
        <!-- relEnd=CalculatedReference otherEnd=InputProperties -->
        <set name="Inputs" table="`CalculatedReference_dependsOn_InputProperties`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_CalculatedReference`" />
            <one-to-many class="Zetbox.App.Base.CalculatedReference_dependsOn_InputProperties_RelationEntryNHibernateImpl+CalculatedReference_dependsOn_InputProperties_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <many-to-one name="ReferencedClass" column="`CalculatedObjectReferenceProperties_fk_ReferencedClass`" class="Zetbox.App.Base.ObjectClassNHibernateImpl+ObjectClassProxy, Zetbox.Objects.NHibernateImpl" />


            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.CompoundObjectPropertyNHibernateImpl+CompoundObjectPropertyProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.CompoundObjectPropertyNHibernateImpl+CompoundObjectPropertyProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.CompoundObjectProperties"
                dynamic-update="true">
            

            <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="CompoundObjectDefinition" column="`CompoundObjectProperties_fk_CompoundObjectDefinition`" class="Zetbox.App.Base.CompoundObjectNHibernateImpl+CompoundObjectProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="HasPersistentOrder" 
                  column="`CompoundObjectProperties_HasPersistentOrder`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsList" 
                  column="`CompoundObjectProperties_IsList`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.ObjectReferencePlaceholderPropertyNHibernateImpl+ObjectReferencePlaceholderPropertyProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.ObjectReferencePlaceholderPropertyNHibernateImpl+ObjectReferencePlaceholderPropertyProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.ObjectReferencePlaceholderProperties"
                dynamic-update="true">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="HasPersistentOrder" 
                  column="`ObjectReferencePlaceholderProperties_HasPersistentOrder`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ImplementorRoleName" 
                  column="`ObjectReferencePlaceholderProperties_ImplementorRoleName`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsList" 
                  column="`ObjectReferencePlaceholderProperties_IsList`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ItemRoleName" 
                  column="`ObjectReferencePlaceholderProperties_ItemRoleName`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="ReferencedObjectClass" column="`ObjectReferencePlaceholderProperties_fk_ReferencedClass`" class="Zetbox.App.Base.ObjectClassNHibernateImpl+ObjectClassProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Verb" 
                  column="`ObjectReferencePlaceholderProperties_Verb`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.ObjectReferencePropertyNHibernateImpl+ObjectReferencePropertyProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.ObjectReferencePropertyNHibernateImpl+ObjectReferencePropertyProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.ObjectReferenceProperties"
                dynamic-update="true">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="EagerLoading" 
                  column="`ObjectReferenceProperties_EagerLoading`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsInlineEditable" 
                  column="`ObjectReferenceProperties_IsInlineEditable`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=ObjRefProp_shows_Methods_RelationEntry -->
        <!-- relEnd=ObjRefProp otherEnd=Methods -->
        <set name="Methods" table="`ObjRefProp_shows_Methods`" inverse="true" cascade="none" batch-size="100" >
            <key column="`fk_ObjRefProp`" />
            <one-to-many class="Zetbox.App.GUI.ObjRefProp_shows_Methods_RelationEntryNHibernateImpl+ObjRefProp_shows_Methods_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <many-to-one name="RelationEnd" column="`ObjectReferenceProperties_fk_RelationEnd`" class="Zetbox.App.Base.RelationEndNHibernateImpl+RelationEndProxy, Zetbox.Objects.NHibernateImpl" unique="true" cascade="none" />


            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.ValueTypePropertyNHibernateImpl+ValueTypePropertyProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.ValueTypePropertyNHibernateImpl+ValueTypePropertyProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.ValueTypeProperties"
                dynamic-update="true">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="HasPersistentOrder" 
                  column="`ValueTypeProperties_HasPersistentOrder`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsCalculated" 
                  column="`ValueTypeProperties_IsCalculated`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsList" 
                  column="`ValueTypeProperties_IsList`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->
        <subclass
                name="Zetbox.App.Base.BoolPropertyNHibernateImpl+BoolPropertyProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.BoolPropertyNHibernateImpl+BoolPropertyProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.BoolProperties"
                dynamic-update="true">
            

            <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="FalseIcon" column="`BoolProperties_fk_FalseIcon`" class="Zetbox.App.GUI.IconNHibernateImpl+IconProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="FalseLabel" 
                  column="`BoolProperties_FalseLabel`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="NullIcon" column="`BoolProperties_fk_NullIcon`" class="Zetbox.App.GUI.IconNHibernateImpl+IconProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="NullLabel" 
                  column="`BoolProperties_NullLabel`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="TrueIcon" column="`BoolProperties_fk_TrueIcon`" class="Zetbox.App.GUI.IconNHibernateImpl+IconProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="TrueLabel" 
                  column="`BoolProperties_TrueLabel`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.DateTimePropertyNHibernateImpl+DateTimePropertyProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.DateTimePropertyNHibernateImpl+DateTimePropertyProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.DateTimeProperties"
                dynamic-update="true">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="DateTimeStyle" 
                  column="`DateTimeProperties_DateTimeStyle`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.DecimalPropertyNHibernateImpl+DecimalPropertyProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.DecimalPropertyNHibernateImpl+DecimalPropertyProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.DecimalProperties"
                dynamic-update="true">
            

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="Precision" 
                  column="`DecimalProperties_Precision`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Scale" 
                  column="`DecimalProperties_Scale`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.DoublePropertyNHibernateImpl+DoublePropertyProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.DoublePropertyNHibernateImpl+DoublePropertyProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.DoubleProperties"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.EnumerationPropertyNHibernateImpl+EnumerationPropertyProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.EnumerationPropertyNHibernateImpl+EnumerationPropertyProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.EnumerationProperties"
                dynamic-update="true">
            

            <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="Enumeration" column="`EnumerationProperties_fk_Enumeration`" class="Zetbox.App.Base.EnumerationNHibernateImpl+EnumerationProxy, Zetbox.Objects.NHibernateImpl" />


            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.GuidPropertyNHibernateImpl+GuidPropertyProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.GuidPropertyNHibernateImpl+GuidPropertyProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.GuidProperties"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.IntPropertyNHibernateImpl+IntPropertyProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.IntPropertyNHibernateImpl+IntPropertyProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.IntProperties"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->

        </subclass>
        <subclass
                name="Zetbox.App.Base.StringPropertyNHibernateImpl+StringPropertyProxy, Zetbox.Objects.NHibernateImpl"
                proxy="Zetbox.App.Base.StringPropertyNHibernateImpl+StringPropertyProxy, Zetbox.Objects.NHibernateImpl"
                discriminator-value="base.StringProperties"
                dynamic-update="true">
            

            <!-- define the properties -->

            <!-- define the subclasses -->

        </subclass>

        </subclass>

    </class>
    <class name="Zetbox.App.Base.RelationNHibernateImpl+RelationProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.RelationNHibernateImpl+RelationProxy, Zetbox.Objects.NHibernateImpl"
           schema="`base`"
           table="`Relations`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`Relations_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="A" column="`fk_A`" class="Zetbox.App.Base.RelationEndNHibernateImpl+RelationEndProxy, Zetbox.Objects.NHibernateImpl" unique="true" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="B" column="`fk_B`" class="Zetbox.App.Base.RelationEndNHibernateImpl+RelationEndProxy, Zetbox.Objects.NHibernateImpl" unique="true" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Containment" 
                  column="`Containment`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Description" 
                  column="`Description`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Module" column="`fk_Module`" class="Zetbox.App.Base.ModuleNHibernateImpl+ModuleProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Storage" 
                  column="`Storage`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Verb" 
                  column="`Verb`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Base.RelationEndNHibernateImpl+RelationEndProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.RelationEndNHibernateImpl+RelationEndProxy, Zetbox.Objects.NHibernateImpl"
           schema="`base`"
           table="`RelationEnds`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`RelationEnds_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <one-to-one name="AParent" class="Zetbox.App.Base.RelationNHibernateImpl+RelationProxy, Zetbox.Objects.NHibernateImpl" constrained="false" property-ref="A" />
<!-- ObjectReferenceProperty -->
        <one-to-one name="BParent" class="Zetbox.App.Base.RelationNHibernateImpl+RelationProxy, Zetbox.Objects.NHibernateImpl" constrained="false" property-ref="B" />
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="HasPersistentOrder" 
                  column="`HasPersistentOrder`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Multiplicity" 
                  column="`Multiplicity`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <one-to-one name="Navigator" class="Zetbox.App.Base.ObjectReferencePropertyNHibernateImpl+ObjectReferencePropertyProxy, Zetbox.Objects.NHibernateImpl" constrained="false" property-ref="RelationEnd" />
        <!-- ValueTypeProperty isValue -->
        <property name="RoleName" 
                  column="`RoleName`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Type" column="`fk_Type`" class="Zetbox.App.Base.ObjectClassNHibernateImpl+ObjectClassProxy, Zetbox.Objects.NHibernateImpl" />


        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Base.SequenceNHibernateImpl+SequenceProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.SequenceNHibernateImpl+SequenceProxy, Zetbox.Objects.NHibernateImpl"
           schema="`base`"
           table="`Sequences`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`Sequences_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <one-to-one name="Data" class="Zetbox.App.Base.SequenceDataNHibernateImpl+SequenceDataProxy, Zetbox.Objects.NHibernateImpl" constrained="false" property-ref="Sequence" />
        <!-- ValueTypeProperty isValue -->
        <property name="Description" 
                  column="`Description`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsContinuous" 
                  column="`IsContinuous`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Module" column="`fk_Module`" class="Zetbox.App.Base.ModuleNHibernateImpl+ModuleProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Base.SequenceDataNHibernateImpl+SequenceDataProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.SequenceDataNHibernateImpl+SequenceDataProxy, Zetbox.Objects.NHibernateImpl"
           schema="`base`"
           table="`SequenceData`"
           abstract="false"
           dynamic-update="false"
           optimistic-lock="none"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`SequenceData_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="CurrentNumber" 
                  column="`CurrentNumber`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Sequence" column="`fk_Sequence`" class="Zetbox.App.Base.SequenceNHibernateImpl+SequenceProxy, Zetbox.Objects.NHibernateImpl" unique="true" />


        <!-- define the subclasses -->

    </class>
    <class name="Zetbox.App.Base.ServiceDescriptorNHibernateImpl+ServiceDescriptorProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.ServiceDescriptorNHibernateImpl+ServiceDescriptorProxy, Zetbox.Objects.NHibernateImpl"
           schema="`base`"
           table="`ServiceDescriptors`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`ServiceDescriptors_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="DeploymentRestriction" 
                  column="`DeploymentRestriction`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Description" 
                  column="`Description`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="Module" column="`fk_Module`" class="Zetbox.App.Base.ModuleNHibernateImpl+ModuleProxy, Zetbox.Objects.NHibernateImpl" />


        <!-- define the subclasses -->

    </class>
</hibernate-mapping>