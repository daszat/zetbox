variables:
  GIT_DEPTH: "100000"
  MSBuildThisFileDirectory: "./"
  IGNORE_NORMALISATION_GIT_HEAD_MOVE: "1"

stages:
  - build
  - deploy
  - publish

build-zetbox:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:6.0
  tags:
    - Windows  
  script: |
    dotnet --info
    dotnet build --disable-parallel --ignore-failed-sources --configuration Release Zetbox.Core.sln
    dotnet publish --disable-parallel --ignore-failed-sources --configuration Release  Zetbox.Server.HttpService/Zetbox.Server.HttpService.csproj --output ./bin/Release/HttpService
  artifacts:
    paths:
      - 'bin'
      - 'publish'
    name: 'zetbox'
    expire_in: 1 hrs
        
create-artifacts:
  stage: deploy
  image: mcr.microsoft.com/dotnet/sdk:6.0
  tags:
    - Windows  
  script: |
    echo "Creating local packages"
    rm publish/*.nupkg
    rm publish/*.nuspec
    cp publish/* ./bin/Release
    
    $version=(gitversion -nofetch -showvariable NuGetVersionV2)
    echo "Version = $version"
    
    echo ""
    echo "setting version"
    
    ls publish/*.nuspec.template | % {
    	$file = $_.Name.Replace(".nuspec.template", "")
    	$file | out-host
    	Get-Content "$file.nuspec.template" | Foreach-object { 
    		$_ -replace '##version##', $version 
    	} | Set-Content -encoding "UTF8" "./bin/Release/$file.nuspec"
    }
    
    echo "packing files"
    ls ./bin/Release/*.nuspec | % {
    	$file = $_.Name
    	$file | out-host
    	nuget pack $file
    }
    
    # for now, publish them
    dotnet nuget push ./publish/*.nupkg -s zetbox --skip-duplicate
  artifacts:
    paths:
      - 'publish/*.nupkg'
    name: 'zetbox-packages'

publish-master:
  stage: publish
  image: mcr.microsoft.com/dotnet/sdk:6.0
  tags:
    - Windows
  only:
    refs:
      - master
  script: |
    echo "Creating final packages"
    dotnet nuget push ./publish/*.nupkg -s zetbox --skip-duplicate

