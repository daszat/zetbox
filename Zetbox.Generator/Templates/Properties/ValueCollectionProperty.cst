<%--
    This file is part of zetbox.

    Zetbox is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as
    published by the Free Software Foundation, either version 3 of
    the License, or (at your option) any later version.

    Zetbox is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with zetbox.  If not, see <http://www.gnu.org/licenses/>.
--%>
<%@ CodeTemplate Language="C#" 
	Name="Properties.ValueCollectionProperty"
	ClassName="Zetbox.Generator.Templates.Properties.ValueCollectionProperty" 
	Inherits="Zetbox.Generator.MemberTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Diagnostics" %>
<%@ Import Namespace="Zetbox.API" %>
<%@ Import Namespace="Zetbox.API.Server" %>
<%@ Import Namespace="Zetbox.App.Base" %>
<%@ Import Namespace="Zetbox.Generator" %>
<%@ Import Namespace="Zetbox.Generator.Extensions" %>
<%@ Parameter Name="ctx" Type="IZetboxContext" %>
<%@ Parameter Name="serializationList" Type="Zetbox.Generator.Templates.Serialization.SerializationMembersList" %>
<%@ Parameter Name="name" Type="string" %>
<%@ Parameter Name="backingName" Type="string" %>
<%@ Parameter Name="backingCollectionType" Type="string" %>
<%@ Parameter Name="exposedCollectionInterface" Type="string" %>
<%@ Parameter Name="thisInterface" Type="string" %>
<%@ Parameter Name="referencedType" Type="string" %>
<%@ Parameter Name="entryType" Type="string" %>
<%@ Parameter Name="entryTypeImpl" Type="string" %>
<%@ Parameter Name="providerCollectionType" Type="string" %>
<%@ Parameter Name="underlyingCollectionName" Type="string" %>
<%@ Parameter Name="orderByValue" Type="bool" %>
<%@ Parameter Name="moduleNamespace" Type="string" %>
<%@ Parameter Name="disableExport" Type="bool" %>
<%

    AddSerialization(serializationList, underlyingCollectionName);
	var eventName = "On" + name + "_PostSetter";
%>
		// <%= this.GetType() %>
		<%= GetModifiers() %> <%= exposedCollectionInterface %><<%= referencedType %>> <%= name %>
		{
			get
			{
				if (<%= backingName %> == null)
				{
				    <%= backingName %> 
				        = new <%= backingCollectionType %><<%= thisInterface %>, <%= referencedType %>, <%= entryType %>, <%= entryTypeImpl %>, <%= providerCollectionType %>>(
							this.Context,
				            this, 
				            () => { this.NotifyPropertyChanged("<%= name %>", null, null); if(<%= eventName %> != null && IsAttached) <%= eventName%>(this); },
				            <%= underlyingCollectionName %>);
				}
				return <%= backingName %>;
			}
		}

		private <%= backingCollectionType %><<%= thisInterface %>, <%= referencedType %>, <%= entryType %>, <%= entryTypeImpl %>, <%= providerCollectionType %>> <%= backingName %>;
		private <%= providerCollectionType %> <%= underlyingCollectionName %> = new <%= providerCollectionType %>();

		<%= GetModifiers() %> System.Threading.Tasks.Task<<%= exposedCollectionInterface %><<%= referencedType %>>> GetProp_<%= name %>()
        {
            return System.Threading.Tasks.Task.FromResult(<%= name %>);
        }