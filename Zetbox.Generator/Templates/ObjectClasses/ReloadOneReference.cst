<%--
    This file is part of zetbox.

    Zetbox is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as
    published by the Free Software Foundation, either version 3 of
    the License, or (at your option) any later version.

    Zetbox is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with zetbox.  If not, see <http://www.gnu.org/licenses/>.
--%>
<%@ CodeTemplate Language="C#" 
    Name="ObjectClasses.ReloadOneReference"
    ClassName="Zetbox.Generator.Templates.ObjectClasses.ReloadOneReference" 
    Inherits="Zetbox.Generator.ResourceTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="Zetbox.API" %>
<%@ Import Namespace="Zetbox.API.Server" %>
<%@ Import Namespace="Zetbox.App.Base" %>
<%@ Import Namespace="Zetbox.App.Extensions" %>
<%@ Import Namespace="Zetbox.Generator" %>
<%@ Import Namespace="Zetbox.Generator.Extensions" %>
<%@ Parameter Name="ctx" Type="IZetboxContext" %>
<%@ Parameter Name="referencedInterface" Type="string" %>
<%@ Parameter Name="referencedImplementation" Type="string" %>
<%@ Parameter Name="name" Type="string" %>
<%@ Parameter Name="implName" Type="string" %>
<%@ Parameter Name="fkBackingName" Type="string" %>
<%@ Parameter Name="fkGuidBackingName" Type="string" %>
<%@ Parameter Name="isExportable" Type="bool" %>

<% if (isExportable) { %>
            if (<%= fkGuidBackingName %>.HasValue)
                <%= implName %> = (<%= referencedImplementation %>)(await Context.FindPersistenceObjectAsync<<%= referencedInterface %>>(<%= fkGuidBackingName %>.Value));
            else
<% } %>
            if (<%= fkBackingName %>.HasValue)
                <%= implName %> = (<%= referencedImplementation %>)(await Context.FindAsync<<%= referencedInterface %>>(<%= fkBackingName %>.Value));
            else
                <%= implName %> = null;
