<root>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Check_label" space="preserve">
    <value>Check</value>
  </data>
  <data name="Check_description" space="preserve">
    <value />
  </data>
  <data name="Check(retVal)_label" space="preserve">
    <value>retVal</value>
  </data>
  <data name="Check(retVal)_description" space="preserve">
    <value />
  </data>
  <data name="Check(certificate)_label" space="preserve">
    <value>certificate</value>
  </data>
  <data name="Check(certificate)_description" space="preserve">
    <value>Certificate either as byte array or as X509Certificate class</value>
  </data>
  <data name="Export_label" space="preserve">
    <value>Export</value>
  </data>
  <data name="Export_description" space="preserve">
    <value />
  </data>
  <data name="Export(file)_label" space="preserve">
    <value>File</value>
  </data>
  <data name="Export(file)_description" space="preserve">
    <value>Target filename</value>
  </data>
  <data name="ExportUI_label" space="preserve">
    <value>Export</value>
  </data>
  <data name="ExportUI_description" space="preserve">
    <value>Exports this License</value>
  </data>
  <data name="IsSignatureValid_label" space="preserve">
    <value>Is signature valid</value>
  </data>
  <data name="IsSignatureValid_description" space="preserve">
    <value>Checks, if the signature is valid</value>
  </data>
  <data name="IsSignatureValid(retVal)_label" space="preserve">
    <value>retVal</value>
  </data>
  <data name="IsSignatureValid(retVal)_description" space="preserve">
    <value />
  </data>
  <data name="IsSignatureValid(certificate)_label" space="preserve">
    <value>certificate</value>
  </data>
  <data name="IsSignatureValid(certificate)_description" space="preserve">
    <value>Certificate either as byte array or as X509Certificate class</value>
  </data>
  <data name="IsValid_label" space="preserve">
    <value>Is valid</value>
  </data>
  <data name="IsValid_description" space="preserve">
    <value>Checks, if the time range is valid</value>
  </data>
  <data name="IsValid(retVal)_label" space="preserve">
    <value>retVal</value>
  </data>
  <data name="IsValid(retVal)_description" space="preserve">
    <value />
  </data>
  <data name="Sign_label" space="preserve">
    <value>Sign</value>
  </data>
  <data name="Sign_description" space="preserve">
    <value>Sings this license</value>
  </data>
  <data name="Sign(certificate)_label" space="preserve">
    <value>certificate</value>
  </data>
  <data name="Sign(certificate)_description" space="preserve">
    <value />
  </data>
  <data name="Sign(password)_label" space="preserve">
    <value>Password</value>
  </data>
  <data name="Sign(password)_description" space="preserve">
    <value>if empty, the password is used from the private key</value>
  </data>
  <data name="SignUI_label" space="preserve">
    <value>Sign</value>
  </data>
  <data name="SignUI_description" space="preserve">
    <value>Sings this license</value>
  </data>
</root>